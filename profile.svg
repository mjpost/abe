<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="458" onload="init(evt)" viewBox="0 0 1200 458" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="458" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg --pid 72809</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="447.00"> </text><svg id="frames" x="10" width="1180" total_samples="8580"><g><title>_apply (torch/nn/modules/module.py:780) (26 samples, 0.30%)</title><rect x="0.0000%" y="228" width="0.3030%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="26"/><text x="0.2500%" y="238.50"></text></g><g><title>_apply (torch/nn/modules/module.py:805) (26 samples, 0.30%)</title><rect x="0.0000%" y="244" width="0.3030%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="26"/><text x="0.2500%" y="254.50"></text></g><g><title>convert (torch/nn/modules/module.py:1160) (26 samples, 0.30%)</title><rect x="0.0000%" y="260" width="0.3030%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="26"/><text x="0.2500%" y="270.50"></text></g><g><title>_apply (torch/nn/modules/module.py:780) (53 samples, 0.62%)</title><rect x="0.0000%" y="196" width="0.6177%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="53"/><text x="0.2500%" y="206.50"></text></g><g><title>_apply (torch/nn/modules/module.py:780) (53 samples, 0.62%)</title><rect x="0.0000%" y="212" width="0.6177%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="53"/><text x="0.2500%" y="222.50"></text></g><g><title>_apply (torch/nn/modules/module.py:805) (27 samples, 0.31%)</title><rect x="0.3030%" y="228" width="0.3147%" height="15" fill="rgb(232,128,0)" fg:x="26" fg:w="27"/><text x="0.5530%" y="238.50"></text></g><g><title>convert (torch/nn/modules/module.py:1160) (27 samples, 0.31%)</title><rect x="0.3030%" y="244" width="0.3147%" height="15" fill="rgb(207,160,47)" fg:x="26" fg:w="27"/><text x="0.5530%" y="254.50"></text></g><g><title>get_model_bundle (ensembling/models.py:52) (54 samples, 0.63%)</title><rect x="0.0000%" y="100" width="0.6294%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="54"/><text x="0.2500%" y="110.50"></text></g><g><title>to (transformers/modeling_utils.py:2861) (54 samples, 0.63%)</title><rect x="0.0000%" y="116" width="0.6294%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="54"/><text x="0.2500%" y="126.50"></text></g><g><title>to (torch/nn/modules/module.py:1174) (54 samples, 0.63%)</title><rect x="0.0000%" y="132" width="0.6294%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="54"/><text x="0.2500%" y="142.50"></text></g><g><title>_apply (torch/nn/modules/module.py:780) (54 samples, 0.63%)</title><rect x="0.0000%" y="148" width="0.6294%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="54"/><text x="0.2500%" y="158.50"></text></g><g><title>_apply (torch/nn/modules/module.py:780) (54 samples, 0.63%)</title><rect x="0.0000%" y="164" width="0.6294%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="54"/><text x="0.2500%" y="174.50"></text></g><g><title>_apply (torch/nn/modules/module.py:780) (54 samples, 0.63%)</title><rect x="0.0000%" y="180" width="0.6294%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="54"/><text x="0.2500%" y="190.50"></text></g><g><title>__init__ (ensembling/models.py:119) (17 samples, 0.20%)</title><rect x="0.6410%" y="116" width="0.1981%" height="15" fill="rgb(206,188,39)" fg:x="55" fg:w="17"/><text x="0.8910%" y="126.50"></text></g><g><title>get_vocab (transformers/models/m2m_100/tokenization_m2m_100.py:181) (17 samples, 0.20%)</title><rect x="0.6410%" y="132" width="0.1981%" height="15" fill="rgb(217,207,13)" fg:x="55" fg:w="17"/><text x="0.8910%" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (transformers/models/m2m_100/tokenization_m2m_100.py:181) (17 samples, 0.20%)</title><rect x="0.6410%" y="148" width="0.1981%" height="15" fill="rgb(231,73,38)" fg:x="55" fg:w="17"/><text x="0.8910%" y="158.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils.py:1044) (11 samples, 0.13%)</title><rect x="0.7110%" y="164" width="0.1282%" height="15" fill="rgb(225,20,46)" fg:x="61" fg:w="11"/><text x="0.9610%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/models.py:139) (21 samples, 0.24%)</title><rect x="0.8392%" y="132" width="0.2448%" height="15" fill="rgb(210,31,41)" fg:x="72" fg:w="21"/><text x="1.0892%" y="142.50"></text></g><g><title>__init__ (ensembling/models.py:139) (37 samples, 0.43%)</title><rect x="0.8392%" y="116" width="0.4312%" height="15" fill="rgb(221,200,47)" fg:x="72" fg:w="37"/><text x="1.0892%" y="126.50"></text></g><g><title>get_vocab (transformers/models/m2m_100/tokenization_m2m_100.py:181) (16 samples, 0.19%)</title><rect x="1.0839%" y="132" width="0.1865%" height="15" fill="rgb(226,26,5)" fg:x="93" fg:w="16"/><text x="1.3339%" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (transformers/models/m2m_100/tokenization_m2m_100.py:181) (16 samples, 0.19%)</title><rect x="1.0839%" y="148" width="0.1865%" height="15" fill="rgb(249,33,26)" fg:x="93" fg:w="16"/><text x="1.3339%" y="158.50"></text></g><g><title>main (ensembling/ensemble.py:356) (128 samples, 1.49%)</title><rect x="0.0000%" y="84" width="1.4918%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="128"/><text x="0.2500%" y="94.50"></text></g><g><title>get_model_bundle (ensembling/models.py:54) (74 samples, 0.86%)</title><rect x="0.6294%" y="100" width="0.8625%" height="15" fill="rgb(221,5,38)" fg:x="54" fg:w="74"/><text x="0.8794%" y="110.50"></text></g><g><title>__init__ (ensembling/models.py:140) (19 samples, 0.22%)</title><rect x="1.2704%" y="116" width="0.2214%" height="15" fill="rgb(247,18,42)" fg:x="109" fg:w="19"/><text x="1.5204%" y="126.50"></text></g><g><title>get_vocab (transformers/models/m2m_100/tokenization_m2m_100.py:181) (14 samples, 0.16%)</title><rect x="1.3287%" y="132" width="0.1632%" height="15" fill="rgb(241,131,45)" fg:x="114" fg:w="14"/><text x="1.5787%" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (transformers/models/m2m_100/tokenization_m2m_100.py:181) (14 samples, 0.16%)</title><rect x="1.3287%" y="148" width="0.1632%" height="15" fill="rgb(249,31,29)" fg:x="114" fg:w="14"/><text x="1.5787%" y="158.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:868) (21 samples, 0.24%)</title><rect x="1.6434%" y="180" width="0.2448%" height="15" fill="rgb(225,111,53)" fg:x="141" fg:w="21"/><text x="1.8934%" y="190.50"></text></g><g><title>warn_if_padding_and_no_attention_mask (transformers/modeling_utils.py:4640) (21 samples, 0.24%)</title><rect x="1.6434%" y="196" width="0.2448%" height="15" fill="rgb(238,160,17)" fg:x="141" fg:w="21"/><text x="1.8934%" y="206.50"></text></g><g><title>__contains__ (torch/_tensor.py:1112) (14 samples, 0.16%)</title><rect x="1.7249%" y="212" width="0.1632%" height="15" fill="rgb(214,148,48)" fg:x="148" fg:w="14"/><text x="1.9749%" y="222.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:877) (60 samples, 0.70%)</title><rect x="1.8881%" y="180" width="0.6993%" height="15" fill="rgb(232,36,49)" fg:x="162" fg:w="60"/><text x="2.1381%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (60 samples, 0.70%)</title><rect x="1.8881%" y="196" width="0.6993%" height="15" fill="rgb(209,103,24)" fg:x="162" fg:w="60"/><text x="2.1381%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (60 samples, 0.70%)</title><rect x="1.8881%" y="212" width="0.6993%" height="15" fill="rgb(229,88,8)" fg:x="162" fg:w="60"/><text x="2.1381%" y="222.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:96) (60 samples, 0.70%)</title><rect x="1.8881%" y="228" width="0.6993%" height="15" fill="rgb(213,181,19)" fg:x="162" fg:w="60"/><text x="2.1381%" y="238.50"></text></g><g><title>forward (torch/nn/modules/sparse.py:164) (60 samples, 0.70%)</title><rect x="1.8881%" y="244" width="0.6993%" height="15" fill="rgb(254,191,54)" fg:x="162" fg:w="60"/><text x="2.1381%" y="254.50"></text></g><g><title>embedding (torch/nn/functional.py:2267) (60 samples, 0.70%)</title><rect x="1.8881%" y="260" width="0.6993%" height="15" fill="rgb(241,83,37)" fg:x="162" fg:w="60"/><text x="2.1381%" y="270.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:470) (30 samples, 0.35%)</title><rect x="2.6690%" y="228" width="0.3497%" height="15" fill="rgb(233,36,39)" fg:x="229" fg:w="30"/><text x="2.9190%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (30 samples, 0.35%)</title><rect x="2.6690%" y="244" width="0.3497%" height="15" fill="rgb(226,3,54)" fg:x="229" fg:w="30"/><text x="2.9190%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (30 samples, 0.35%)</title><rect x="2.6690%" y="260" width="0.3497%" height="15" fill="rgb(245,192,40)" fg:x="229" fg:w="30"/><text x="2.9190%" y="270.50"></text></g><g><title>set_input (ensembling/models.py:170) (134 samples, 1.56%)</title><rect x="1.6200%" y="132" width="1.5618%" height="15" fill="rgb(238,167,29)" fg:x="139" fg:w="134"/><text x="1.8700%" y="142.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (134 samples, 1.56%)</title><rect x="1.6200%" y="148" width="1.5618%" height="15" fill="rgb(232,182,51)" fg:x="139" fg:w="134"/><text x="1.8700%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (134 samples, 1.56%)</title><rect x="1.6200%" y="164" width="1.5618%" height="15" fill="rgb(231,60,39)" fg:x="139" fg:w="134"/><text x="1.8700%" y="174.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:925) (46 samples, 0.54%)</title><rect x="2.6457%" y="180" width="0.5361%" height="15" fill="rgb(208,69,12)" fg:x="227" fg:w="46"/><text x="2.8957%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (46 samples, 0.54%)</title><rect x="2.6457%" y="196" width="0.5361%" height="15" fill="rgb(235,93,37)" fg:x="227" fg:w="46"/><text x="2.8957%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (45 samples, 0.52%)</title><rect x="2.6573%" y="212" width="0.5245%" height="15" fill="rgb(213,116,39)" fg:x="228" fg:w="45"/><text x="2.9073%" y="222.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:187) (149 samples, 1.74%)</title><rect x="1.5501%" y="116" width="1.7366%" height="15" fill="rgb(222,207,29)" fg:x="133" fg:w="149"/><text x="1.8001%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:212) (14 samples, 0.16%)</title><rect x="3.3333%" y="116" width="0.1632%" height="15" fill="rgb(206,96,30)" fg:x="286" fg:w="14"/><text x="3.5833%" y="126.50"></text></g><g><title>step (ensembling/models.py:228) (10 samples, 0.12%)</title><rect x="3.6946%" y="132" width="0.1166%" height="15" fill="rgb(218,138,4)" fg:x="317" fg:w="10"/><text x="3.9446%" y="142.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1091) (20 samples, 0.23%)</title><rect x="4.0676%" y="276" width="0.2331%" height="15" fill="rgb(250,191,14)" fg:x="349" fg:w="20"/><text x="4.3176%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (18 samples, 0.21%)</title><rect x="4.0909%" y="292" width="0.2098%" height="15" fill="rgb(239,60,40)" fg:x="351" fg:w="18"/><text x="4.3409%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (17 samples, 0.20%)</title><rect x="4.1026%" y="308" width="0.1981%" height="15" fill="rgb(206,27,48)" fg:x="352" fg:w="17"/><text x="4.3526%" y="318.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:96) (17 samples, 0.20%)</title><rect x="4.1026%" y="324" width="0.1981%" height="15" fill="rgb(225,35,8)" fg:x="352" fg:w="17"/><text x="4.3526%" y="334.50"></text></g><g><title>forward (torch/nn/modules/sparse.py:164) (12 samples, 0.14%)</title><rect x="4.1608%" y="340" width="0.1399%" height="15" fill="rgb(250,213,24)" fg:x="357" fg:w="12"/><text x="4.4108%" y="350.50"></text></g><g><title>embedding (torch/nn/functional.py:2267) (11 samples, 0.13%)</title><rect x="4.1725%" y="356" width="0.1282%" height="15" fill="rgb(247,123,22)" fg:x="358" fg:w="11"/><text x="4.4225%" y="366.50"></text></g><g><title>to_4d (transformers/modeling_attn_mask_utils.py:121) (17 samples, 0.20%)</title><rect x="4.3240%" y="308" width="0.1981%" height="15" fill="rgb(231,138,38)" fg:x="371" fg:w="17"/><text x="4.5740%" y="318.50"></text></g><g><title>_expand_mask (transformers/modeling_attn_mask_utils.py:182) (9 samples, 0.10%)</title><rect x="4.5338%" y="324" width="0.1049%" height="15" fill="rgb(231,145,46)" fg:x="389" fg:w="9"/><text x="4.7838%" y="334.50"></text></g><g><title>to_4d (transformers/modeling_attn_mask_utils.py:132) (27 samples, 0.31%)</title><rect x="4.5221%" y="308" width="0.3147%" height="15" fill="rgb(251,118,11)" fg:x="388" fg:w="27"/><text x="4.7721%" y="318.50"></text></g><g><title>_expand_mask (transformers/modeling_attn_mask_utils.py:186) (9 samples, 0.10%)</title><rect x="4.7319%" y="324" width="0.1049%" height="15" fill="rgb(217,147,25)" fg:x="406" fg:w="9"/><text x="4.9819%" y="334.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1098) (47 samples, 0.55%)</title><rect x="4.3124%" y="276" width="0.5478%" height="15" fill="rgb(247,81,37)" fg:x="370" fg:w="47"/><text x="4.5624%" y="286.50"></text></g><g><title>_prepare_4d_causal_attention_mask (transformers/modeling_attn_mask_utils.py:321) (46 samples, 0.54%)</title><rect x="4.3240%" y="292" width="0.5361%" height="15" fill="rgb(209,12,38)" fg:x="371" fg:w="46"/><text x="4.5740%" y="302.50"></text></g><g><title>create_position_ids_from_input_ids (transformers/models/m2m_100/modeling_m2m_100.py:80) (14 samples, 0.16%)</title><rect x="4.9417%" y="356" width="0.1632%" height="15" fill="rgb(227,1,9)" fg:x="424" fg:w="14"/><text x="5.1917%" y="366.50"></text></g><g><title>create_position_ids_from_input_ids (transformers/models/m2m_100/modeling_m2m_100.py:81) (23 samples, 0.27%)</title><rect x="5.1049%" y="356" width="0.2681%" height="15" fill="rgb(248,47,43)" fg:x="438" fg:w="23"/><text x="5.3549%" y="366.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:145) (40 samples, 0.47%)</title><rect x="4.9417%" y="340" width="0.4662%" height="15" fill="rgb(221,10,30)" fg:x="424" fg:w="40"/><text x="5.1917%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1113) (57 samples, 0.66%)</title><rect x="4.8601%" y="276" width="0.6643%" height="15" fill="rgb(210,229,1)" fg:x="417" fg:w="57"/><text x="5.1101%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (55 samples, 0.64%)</title><rect x="4.8834%" y="292" width="0.6410%" height="15" fill="rgb(222,148,37)" fg:x="419" fg:w="55"/><text x="5.1334%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (55 samples, 0.64%)</title><rect x="4.8834%" y="308" width="0.6410%" height="15" fill="rgb(234,67,33)" fg:x="419" fg:w="55"/><text x="5.1334%" y="318.50"></text></g><g><title>decorate_context (torch/utils/_contextlib.py:116) (50 samples, 0.58%)</title><rect x="4.9417%" y="324" width="0.5828%" height="15" fill="rgb(247,98,35)" fg:x="424" fg:w="50"/><text x="5.1917%" y="334.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:157) (9 samples, 0.10%)</title><rect x="5.4196%" y="340" width="0.1049%" height="15" fill="rgb(247,138,52)" fg:x="465" fg:w="9"/><text x="5.6696%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1148) (42 samples, 0.49%)</title><rect x="5.7226%" y="276" width="0.4895%" height="15" fill="rgb(213,79,30)" fg:x="491" fg:w="42"/><text x="5.9726%" y="286.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:202) (74 samples, 0.86%)</title><rect x="6.7716%" y="372" width="0.8625%" height="15" fill="rgb(246,177,23)" fg:x="581" fg:w="74"/><text x="7.0216%" y="382.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2576) (74 samples, 0.86%)</title><rect x="6.7716%" y="388" width="0.8625%" height="15" fill="rgb(230,62,27)" fg:x="581" fg:w="74"/><text x="7.0216%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:569) (93 samples, 1.08%)</title><rect x="6.6200%" y="324" width="1.0839%" height="15" fill="rgb(216,154,8)" fg:x="568" fg:w="93"/><text x="6.8700%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (86 samples, 1.00%)</title><rect x="6.7016%" y="340" width="1.0023%" height="15" fill="rgb(244,35,45)" fg:x="575" fg:w="86"/><text x="6.9516%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (82 samples, 0.96%)</title><rect x="6.7483%" y="356" width="0.9557%" height="15" fill="rgb(251,115,12)" fg:x="579" fg:w="82"/><text x="6.9983%" y="366.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:233) (231 samples, 2.69%)</title><rect x="8.2867%" y="372" width="2.6923%" height="15" fill="rgb(240,54,50)" fg:x="711" fg:w="231"/><text x="8.5367%" y="382.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (151 samples, 1.76%)</title><rect x="9.2191%" y="388" width="1.7599%" height="15" fill="rgb(233,84,52)" fg:x="791" fg:w="151"/><text x="9.4691%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (146 samples, 1.70%)</title><rect x="9.2774%" y="404" width="1.7016%" height="15" fill="rgb(207,117,47)" fg:x="796" fg:w="146"/><text x="9.5274%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (145 samples, 1.69%)</title><rect x="9.2890%" y="420" width="1.6900%" height="15" fill="rgb(249,43,39)" fg:x="797" fg:w="145"/><text x="9.5390%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (59 samples, 0.69%)</title><rect x="11.2121%" y="388" width="0.6876%" height="15" fill="rgb(209,38,44)" fg:x="962" fg:w="59"/><text x="11.4621%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:252) (177 samples, 2.06%)</title><rect x="10.9790%" y="372" width="2.0629%" height="15" fill="rgb(236,212,23)" fg:x="942" fg:w="177"/><text x="11.2290%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (97 samples, 1.13%)</title><rect x="11.9114%" y="388" width="1.1305%" height="15" fill="rgb(242,79,21)" fg:x="1022" fg:w="97"/><text x="12.1614%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (88 samples, 1.03%)</title><rect x="12.0163%" y="404" width="1.0256%" height="15" fill="rgb(211,96,35)" fg:x="1031" fg:w="88"/><text x="12.2663%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (87 samples, 1.01%)</title><rect x="12.0280%" y="420" width="1.0140%" height="15" fill="rgb(253,215,40)" fg:x="1032" fg:w="87"/><text x="12.2780%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (47 samples, 0.55%)</title><rect x="13.1352%" y="388" width="0.5478%" height="15" fill="rgb(211,81,21)" fg:x="1127" fg:w="47"/><text x="13.3852%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:253) (158 samples, 1.84%)</title><rect x="13.0420%" y="372" width="1.8415%" height="15" fill="rgb(208,190,38)" fg:x="1119" fg:w="158"/><text x="13.2920%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (102 samples, 1.19%)</title><rect x="13.6946%" y="388" width="1.1888%" height="15" fill="rgb(235,213,38)" fg:x="1175" fg:w="102"/><text x="13.9446%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (96 samples, 1.12%)</title><rect x="13.7646%" y="404" width="1.1189%" height="15" fill="rgb(237,122,38)" fg:x="1181" fg:w="96"/><text x="14.0146%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (96 samples, 1.12%)</title><rect x="13.7646%" y="420" width="1.1189%" height="15" fill="rgb(244,218,35)" fg:x="1181" fg:w="96"/><text x="14.0146%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:254) (78 samples, 0.91%)</title><rect x="14.8834%" y="372" width="0.9091%" height="15" fill="rgb(240,68,47)" fg:x="1277" fg:w="78"/><text x="15.1334%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:255) (60 samples, 0.70%)</title><rect x="15.7925%" y="372" width="0.6993%" height="15" fill="rgb(210,16,53)" fg:x="1355" fg:w="60"/><text x="16.0425%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:272) (49 samples, 0.57%)</title><rect x="16.6550%" y="372" width="0.5711%" height="15" fill="rgb(235,124,12)" fg:x="1429" fg:w="49"/><text x="16.9050%" y="382.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (31 samples, 0.36%)</title><rect x="16.8648%" y="388" width="0.3613%" height="15" fill="rgb(224,169,11)" fg:x="1447" fg:w="31"/><text x="17.1148%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:273) (14 samples, 0.16%)</title><rect x="17.2261%" y="372" width="0.1632%" height="15" fill="rgb(250,166,2)" fg:x="1478" fg:w="14"/><text x="17.4761%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:277) (105 samples, 1.22%)</title><rect x="17.5058%" y="372" width="1.2238%" height="15" fill="rgb(242,216,29)" fg:x="1502" fg:w="105"/><text x="17.7558%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:290) (89 samples, 1.04%)</title><rect x="18.7995%" y="372" width="1.0373%" height="15" fill="rgb(230,116,27)" fg:x="1613" fg:w="89"/><text x="19.0495%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:291) (13 samples, 0.15%)</title><rect x="19.8368%" y="372" width="0.1515%" height="15" fill="rgb(228,99,48)" fg:x="1702" fg:w="13"/><text x="20.0868%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:293) (51 samples, 0.59%)</title><rect x="19.9883%" y="372" width="0.5944%" height="15" fill="rgb(253,11,6)" fg:x="1715" fg:w="51"/><text x="20.2383%" y="382.50"></text></g><g><title>softmax (torch/nn/functional.py:1888) (38 samples, 0.44%)</title><rect x="20.1399%" y="388" width="0.4429%" height="15" fill="rgb(247,143,39)" fg:x="1728" fg:w="38"/><text x="20.3899%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:314) (36 samples, 0.42%)</title><rect x="20.5944%" y="372" width="0.4196%" height="15" fill="rgb(236,97,10)" fg:x="1767" fg:w="36"/><text x="20.8444%" y="382.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (35 samples, 0.41%)</title><rect x="20.6061%" y="388" width="0.4079%" height="15" fill="rgb(233,208,19)" fg:x="1768" fg:w="35"/><text x="20.8561%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:316) (59 samples, 0.69%)</title><rect x="21.0140%" y="372" width="0.6876%" height="15" fill="rgb(216,164,2)" fg:x="1803" fg:w="59"/><text x="21.2640%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:324) (13 samples, 0.15%)</title><rect x="21.7483%" y="372" width="0.1515%" height="15" fill="rgb(220,129,5)" fg:x="1866" fg:w="13"/><text x="21.9983%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:325) (10 samples, 0.12%)</title><rect x="21.8998%" y="372" width="0.1166%" height="15" fill="rgb(242,17,10)" fg:x="1879" fg:w="10"/><text x="22.1498%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:329) (43 samples, 0.50%)</title><rect x="22.0163%" y="372" width="0.5012%" height="15" fill="rgb(242,107,0)" fg:x="1889" fg:w="43"/><text x="22.2663%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:575) (1,429 samples, 16.66%)</title><rect x="7.7389%" y="324" width="16.6550%" height="15" fill="rgb(251,28,31)" fg:x="664" fg:w="1429"/><text x="7.9889%" y="334.50">forward (transformers/mode..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (1,407 samples, 16.40%)</title><rect x="7.9953%" y="340" width="16.3986%" height="15" fill="rgb(233,223,10)" fg:x="686" fg:w="1407"/><text x="8.2453%" y="350.50">_wrapped_call_impl (torch..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (1,395 samples, 16.26%)</title><rect x="8.1352%" y="356" width="16.2587%" height="15" fill="rgb(215,21,27)" fg:x="698" fg:w="1395"/><text x="8.3852%" y="366.50">_call_impl (torch/nn/modu..</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:331) (161 samples, 1.88%)</title><rect x="22.5175%" y="372" width="1.8765%" height="15" fill="rgb(232,23,21)" fg:x="1932" fg:w="161"/><text x="22.7675%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (149 samples, 1.74%)</title><rect x="22.6573%" y="388" width="1.7366%" height="15" fill="rgb(244,5,23)" fg:x="1944" fg:w="149"/><text x="22.9073%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (132 samples, 1.54%)</title><rect x="22.8555%" y="404" width="1.5385%" height="15" fill="rgb(226,81,46)" fg:x="1961" fg:w="132"/><text x="23.1055%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (131 samples, 1.53%)</title><rect x="22.8671%" y="420" width="1.5268%" height="15" fill="rgb(247,70,30)" fg:x="1962" fg:w="131"/><text x="23.1171%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:582) (17 samples, 0.20%)</title><rect x="24.3939%" y="324" width="0.1981%" height="15" fill="rgb(212,68,19)" fg:x="2093" fg:w="17"/><text x="24.6439%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (14 samples, 0.16%)</title><rect x="24.4289%" y="340" width="0.1632%" height="15" fill="rgb(240,187,13)" fg:x="2096" fg:w="14"/><text x="24.6789%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:583) (63 samples, 0.73%)</title><rect x="24.5921%" y="324" width="0.7343%" height="15" fill="rgb(223,113,26)" fg:x="2110" fg:w="63"/><text x="24.8421%" y="334.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:202) (81 samples, 0.94%)</title><rect x="25.5711%" y="372" width="0.9441%" height="15" fill="rgb(206,192,2)" fg:x="2194" fg:w="81"/><text x="25.8211%" y="382.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2576) (80 samples, 0.93%)</title><rect x="25.5828%" y="388" width="0.9324%" height="15" fill="rgb(241,108,4)" fg:x="2195" fg:w="80"/><text x="25.8328%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:590) (107 samples, 1.25%)</title><rect x="25.3263%" y="324" width="1.2471%" height="15" fill="rgb(247,173,49)" fg:x="2173" fg:w="107"/><text x="25.5763%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (96 samples, 1.12%)</title><rect x="25.4545%" y="340" width="1.1189%" height="15" fill="rgb(224,114,35)" fg:x="2184" fg:w="96"/><text x="25.7045%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (86 samples, 1.00%)</title><rect x="25.5711%" y="356" width="1.0023%" height="15" fill="rgb(245,159,27)" fg:x="2194" fg:w="86"/><text x="25.8211%" y="366.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:233) (192 samples, 2.24%)</title><rect x="27.2261%" y="372" width="2.2378%" height="15" fill="rgb(245,172,44)" fg:x="2336" fg:w="192"/><text x="27.4761%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (112 samples, 1.31%)</title><rect x="28.1585%" y="388" width="1.3054%" height="15" fill="rgb(236,23,11)" fg:x="2416" fg:w="112"/><text x="28.4085%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (107 samples, 1.25%)</title><rect x="28.2168%" y="404" width="1.2471%" height="15" fill="rgb(205,117,38)" fg:x="2421" fg:w="107"/><text x="28.4668%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (106 samples, 1.24%)</title><rect x="28.2284%" y="420" width="1.2354%" height="15" fill="rgb(237,72,25)" fg:x="2422" fg:w="106"/><text x="28.4784%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (69 samples, 0.80%)</title><rect x="29.7436%" y="388" width="0.8042%" height="15" fill="rgb(244,70,9)" fg:x="2552" fg:w="69"/><text x="29.9936%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:248) (192 samples, 2.24%)</title><rect x="29.5338%" y="372" width="2.2378%" height="15" fill="rgb(217,125,39)" fg:x="2534" fg:w="192"/><text x="29.7838%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (105 samples, 1.22%)</title><rect x="30.5478%" y="388" width="1.2238%" height="15" fill="rgb(235,36,10)" fg:x="2621" fg:w="105"/><text x="30.7978%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (100 samples, 1.17%)</title><rect x="30.6061%" y="404" width="1.1655%" height="15" fill="rgb(251,123,47)" fg:x="2626" fg:w="100"/><text x="30.8561%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (99 samples, 1.15%)</title><rect x="30.6177%" y="420" width="1.1538%" height="15" fill="rgb(221,13,13)" fg:x="2627" fg:w="99"/><text x="30.8677%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (59 samples, 0.69%)</title><rect x="31.8765%" y="388" width="0.6876%" height="15" fill="rgb(238,131,9)" fg:x="2735" fg:w="59"/><text x="32.1265%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:249) (156 samples, 1.82%)</title><rect x="31.7716%" y="372" width="1.8182%" height="15" fill="rgb(211,50,8)" fg:x="2726" fg:w="156"/><text x="32.0216%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (88 samples, 1.03%)</title><rect x="32.5641%" y="388" width="1.0256%" height="15" fill="rgb(245,182,24)" fg:x="2794" fg:w="88"/><text x="32.8141%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (82 samples, 0.96%)</title><rect x="32.6340%" y="404" width="0.9557%" height="15" fill="rgb(242,14,37)" fg:x="2800" fg:w="82"/><text x="32.8840%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (82 samples, 0.96%)</title><rect x="32.6340%" y="420" width="0.9557%" height="15" fill="rgb(246,228,12)" fg:x="2800" fg:w="82"/><text x="32.8840%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:272) (60 samples, 0.70%)</title><rect x="33.6131%" y="372" width="0.6993%" height="15" fill="rgb(213,55,15)" fg:x="2884" fg:w="60"/><text x="33.8631%" y="382.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (41 samples, 0.48%)</title><rect x="33.8345%" y="388" width="0.4779%" height="15" fill="rgb(209,9,3)" fg:x="2903" fg:w="41"/><text x="34.0845%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:273) (12 samples, 0.14%)</title><rect x="34.3124%" y="372" width="0.1399%" height="15" fill="rgb(230,59,30)" fg:x="2944" fg:w="12"/><text x="34.5624%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:277) (60 samples, 0.70%)</title><rect x="34.5105%" y="372" width="0.6993%" height="15" fill="rgb(209,121,21)" fg:x="2961" fg:w="60"/><text x="34.7605%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:293) (54 samples, 0.63%)</title><rect x="35.2681%" y="372" width="0.6294%" height="15" fill="rgb(220,109,13)" fg:x="3026" fg:w="54"/><text x="35.5181%" y="382.50"></text></g><g><title>softmax (torch/nn/functional.py:1888) (49 samples, 0.57%)</title><rect x="35.3263%" y="388" width="0.5711%" height="15" fill="rgb(232,18,1)" fg:x="3031" fg:w="49"/><text x="35.5763%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:314) (23 samples, 0.27%)</title><rect x="35.9091%" y="372" width="0.2681%" height="15" fill="rgb(215,41,42)" fg:x="3081" fg:w="23"/><text x="36.1591%" y="382.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (19 samples, 0.22%)</title><rect x="35.9557%" y="388" width="0.2214%" height="15" fill="rgb(224,123,36)" fg:x="3085" fg:w="19"/><text x="36.2057%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:316) (54 samples, 0.63%)</title><rect x="36.1772%" y="372" width="0.6294%" height="15" fill="rgb(240,125,3)" fg:x="3104" fg:w="54"/><text x="36.4272%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:324) (16 samples, 0.19%)</title><rect x="36.8415%" y="372" width="0.1865%" height="15" fill="rgb(205,98,50)" fg:x="3161" fg:w="16"/><text x="37.0915%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:325) (9 samples, 0.10%)</title><rect x="37.0280%" y="372" width="0.1049%" height="15" fill="rgb(205,185,37)" fg:x="3177" fg:w="9"/><text x="37.2780%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:329) (40 samples, 0.47%)</title><rect x="37.1329%" y="372" width="0.4662%" height="15" fill="rgb(238,207,15)" fg:x="3186" fg:w="40"/><text x="37.3829%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:594) (1,086 samples, 12.66%)</title><rect x="26.6084%" y="324" width="12.6573%" height="15" fill="rgb(213,199,42)" fg:x="2283" fg:w="1086"/><text x="26.8584%" y="334.50">forward (transforme..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (1,064 samples, 12.40%)</title><rect x="26.8648%" y="340" width="12.4009%" height="15" fill="rgb(235,201,11)" fg:x="2305" fg:w="1064"/><text x="27.1148%" y="350.50">_wrapped_call_impl ..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (1,050 samples, 12.24%)</title><rect x="27.0280%" y="356" width="12.2378%" height="15" fill="rgb(207,46,11)" fg:x="2319" fg:w="1050"/><text x="27.2780%" y="366.50">_call_impl (torch/..</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:331) (143 samples, 1.67%)</title><rect x="37.5991%" y="372" width="1.6667%" height="15" fill="rgb(241,35,35)" fg:x="3226" fg:w="143"/><text x="37.8491%" y="382.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (125 samples, 1.46%)</title><rect x="37.8089%" y="388" width="1.4569%" height="15" fill="rgb(243,32,47)" fg:x="3244" fg:w="125"/><text x="38.0589%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (110 samples, 1.28%)</title><rect x="37.9837%" y="404" width="1.2821%" height="15" fill="rgb(247,202,23)" fg:x="3259" fg:w="110"/><text x="38.2337%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (109 samples, 1.27%)</title><rect x="37.9953%" y="420" width="1.2704%" height="15" fill="rgb(219,102,11)" fg:x="3260" fg:w="109"/><text x="38.2453%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:602) (27 samples, 0.31%)</title><rect x="39.2657%" y="324" width="0.3147%" height="15" fill="rgb(243,110,44)" fg:x="3369" fg:w="27"/><text x="39.5157%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (24 samples, 0.28%)</title><rect x="39.3007%" y="340" width="0.2797%" height="15" fill="rgb(222,74,54)" fg:x="3372" fg:w="24"/><text x="39.5507%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:603) (58 samples, 0.68%)</title><rect x="39.5804%" y="324" width="0.6760%" height="15" fill="rgb(216,99,12)" fg:x="3396" fg:w="58"/><text x="39.8304%" y="334.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:202) (94 samples, 1.10%)</title><rect x="40.5245%" y="372" width="1.0956%" height="15" fill="rgb(226,22,26)" fg:x="3477" fg:w="94"/><text x="40.7745%" y="382.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2576) (90 samples, 1.05%)</title><rect x="40.5711%" y="388" width="1.0490%" height="15" fill="rgb(217,163,10)" fg:x="3481" fg:w="90"/><text x="40.8211%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:610) (121 samples, 1.41%)</title><rect x="40.2914%" y="324" width="1.4103%" height="15" fill="rgb(213,25,53)" fg:x="3457" fg:w="121"/><text x="40.5414%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (107 samples, 1.25%)</title><rect x="40.4545%" y="340" width="1.2471%" height="15" fill="rgb(252,105,26)" fg:x="3471" fg:w="107"/><text x="40.7045%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (101 samples, 1.18%)</title><rect x="40.5245%" y="356" width="1.1772%" height="15" fill="rgb(220,39,43)" fg:x="3477" fg:w="101"/><text x="40.7745%" y="366.50"></text></g><g><title>forward (torch/nn/modules/activation.py:104) (56 samples, 0.65%)</title><rect x="42.1096%" y="372" width="0.6527%" height="15" fill="rgb(229,68,48)" fg:x="3613" fg:w="56"/><text x="42.3596%" y="382.50"></text></g><g><title>relu (torch/nn/functional.py:1500) (54 samples, 0.63%)</title><rect x="42.1329%" y="388" width="0.6294%" height="15" fill="rgb(252,8,32)" fg:x="3615" fg:w="54"/><text x="42.3829%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:611) (198 samples, 2.31%)</title><rect x="41.7016%" y="324" width="2.3077%" height="15" fill="rgb(223,20,43)" fg:x="3578" fg:w="198"/><text x="41.9516%" y="334.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (174 samples, 2.03%)</title><rect x="41.9814%" y="340" width="2.0280%" height="15" fill="rgb(229,81,49)" fg:x="3602" fg:w="174"/><text x="42.2314%" y="350.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (164 samples, 1.91%)</title><rect x="42.0979%" y="356" width="1.9114%" height="15" fill="rgb(236,28,36)" fg:x="3612" fg:w="164"/><text x="42.3479%" y="366.50">_..</text></g><g><title>forward (torch/nn/modules/linear.py:117) (107 samples, 1.25%)</title><rect x="42.7622%" y="372" width="1.2471%" height="15" fill="rgb(249,185,26)" fg:x="3669" fg:w="107"/><text x="43.0122%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:612) (21 samples, 0.24%)</title><rect x="44.0093%" y="324" width="0.2448%" height="15" fill="rgb(249,174,33)" fg:x="3776" fg:w="21"/><text x="44.2593%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (20 samples, 0.23%)</title><rect x="44.0210%" y="340" width="0.2331%" height="15" fill="rgb(233,201,37)" fg:x="3777" fg:w="20"/><text x="44.2710%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:613) (113 samples, 1.32%)</title><rect x="44.2541%" y="324" width="1.3170%" height="15" fill="rgb(221,78,26)" fg:x="3797" fg:w="113"/><text x="44.5041%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (106 samples, 1.24%)</title><rect x="44.3357%" y="340" width="1.2354%" height="15" fill="rgb(250,127,30)" fg:x="3804" fg:w="106"/><text x="44.5857%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (103 samples, 1.20%)</title><rect x="44.3706%" y="356" width="1.2005%" height="15" fill="rgb(230,49,44)" fg:x="3807" fg:w="103"/><text x="44.6206%" y="366.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (102 samples, 1.19%)</title><rect x="44.3823%" y="372" width="1.1888%" height="15" fill="rgb(229,67,23)" fg:x="3808" fg:w="102"/><text x="44.6323%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:614) (16 samples, 0.19%)</title><rect x="45.5711%" y="324" width="0.1865%" height="15" fill="rgb(249,83,47)" fg:x="3910" fg:w="16"/><text x="45.8211%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (12 samples, 0.14%)</title><rect x="45.6177%" y="340" width="0.1399%" height="15" fill="rgb(215,43,3)" fg:x="3914" fg:w="12"/><text x="45.8677%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:615) (44 samples, 0.51%)</title><rect x="45.7576%" y="324" width="0.5128%" height="15" fill="rgb(238,154,13)" fg:x="3926" fg:w="44"/><text x="46.0076%" y="334.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1170) (3,435 samples, 40.03%)</title><rect x="6.2937%" y="276" width="40.0350%" height="15" fill="rgb(219,56,2)" fg:x="540" fg:w="3435"/><text x="6.5437%" y="286.50">forward (transformers/models/m2m_100/modeling_m2m_100.py:1170)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (3,428 samples, 39.95%)</title><rect x="6.3753%" y="292" width="39.9534%" height="15" fill="rgb(233,0,4)" fg:x="547" fg:w="3428"/><text x="6.6253%" y="302.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (3,417 samples, 39.83%)</title><rect x="6.5035%" y="308" width="39.8252%" height="15" fill="rgb(235,30,7)" fg:x="558" fg:w="3417"/><text x="6.7535%" y="318.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1312) (3,650 samples, 42.54%)</title><rect x="3.9394%" y="228" width="42.5408%" height="15" fill="rgb(250,79,13)" fg:x="338" fg:w="3650"/><text x="4.1894%" y="238.50">forward (transformers/models/m2m_100/modeling_m2m_100.py:1312)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (3,645 samples, 42.48%)</title><rect x="3.9977%" y="244" width="42.4825%" height="15" fill="rgb(211,146,34)" fg:x="343" fg:w="3645"/><text x="4.2477%" y="254.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (3,645 samples, 42.48%)</title><rect x="3.9977%" y="260" width="42.4825%" height="15" fill="rgb(228,22,38)" fg:x="343" fg:w="3645"/><text x="4.2477%" y="270.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1407) (3,658 samples, 42.63%)</title><rect x="3.8928%" y="180" width="42.6340%" height="15" fill="rgb(235,168,5)" fg:x="334" fg:w="3658"/><text x="4.1428%" y="190.50">forward (transformers/models/m2m_100/modeling_m2m_100.py:1407)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (3,655 samples, 42.60%)</title><rect x="3.9277%" y="196" width="42.5991%" height="15" fill="rgb(221,155,16)" fg:x="337" fg:w="3655"/><text x="4.1777%" y="206.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (3,655 samples, 42.60%)</title><rect x="3.9277%" y="212" width="42.5991%" height="15" fill="rgb(215,215,53)" fg:x="337" fg:w="3655"/><text x="4.1777%" y="222.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1424) (16 samples, 0.19%)</title><rect x="46.5268%" y="180" width="0.1865%" height="15" fill="rgb(223,4,10)" fg:x="3992" fg:w="16"/><text x="46.7768%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (15 samples, 0.17%)</title><rect x="46.5385%" y="196" width="0.1748%" height="15" fill="rgb(234,103,6)" fg:x="3993" fg:w="15"/><text x="46.7885%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (15 samples, 0.17%)</title><rect x="46.5385%" y="212" width="0.1748%" height="15" fill="rgb(227,97,0)" fg:x="3993" fg:w="15"/><text x="46.7885%" y="222.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (15 samples, 0.17%)</title><rect x="46.5385%" y="228" width="0.1748%" height="15" fill="rgb(234,150,53)" fg:x="3993" fg:w="15"/><text x="46.7885%" y="238.50"></text></g><g><title>step (ensembling/models.py:229) (3,684 samples, 42.94%)</title><rect x="3.8112%" y="132" width="42.9371%" height="15" fill="rgb(228,201,54)" fg:x="327" fg:w="3684"/><text x="4.0612%" y="142.50">step (ensembling/models.py:229)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (3,683 samples, 42.93%)</title><rect x="3.8228%" y="148" width="42.9254%" height="15" fill="rgb(222,22,37)" fg:x="328" fg:w="3683"/><text x="4.0728%" y="158.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (3,678 samples, 42.87%)</title><rect x="3.8811%" y="164" width="42.8671%" height="15" fill="rgb(237,53,32)" fg:x="333" fg:w="3678"/><text x="4.1311%" y="174.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>step (ensembling/models.py:241) (351 samples, 4.09%)</title><rect x="46.7483%" y="132" width="4.0909%" height="15" fill="rgb(233,25,53)" fg:x="4011" fg:w="351"/><text x="46.9983%" y="142.50">step..</text></g><g><title>step (ensembling/models.py:247) (40 samples, 0.47%)</title><rect x="50.9324%" y="132" width="0.4662%" height="15" fill="rgb(210,40,34)" fg:x="4370" fg:w="40"/><text x="51.1824%" y="142.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:216) (4,119 samples, 48.01%)</title><rect x="3.4965%" y="116" width="48.0070%" height="15" fill="rgb(241,220,44)" fg:x="300" fg:w="4119"/><text x="3.7465%" y="126.50">ensemble_beam_search (ensembling/ensemble.py:216)</text></g><g><title>step (ensembling/models.py:248) (9 samples, 0.10%)</title><rect x="51.3986%" y="132" width="0.1049%" height="15" fill="rgb(235,28,35)" fg:x="4410" fg:w="9"/><text x="51.6486%" y="142.50"></text></g><g><title>log_softmax (torch/nn/functional.py:1977) (9 samples, 0.10%)</title><rect x="51.3986%" y="148" width="0.1049%" height="15" fill="rgb(210,56,17)" fg:x="4410" fg:w="9"/><text x="51.6486%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:217) (21 samples, 0.24%)</title><rect x="51.5035%" y="116" width="0.2448%" height="15" fill="rgb(224,130,29)" fg:x="4419" fg:w="21"/><text x="51.7535%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:228) (13 samples, 0.15%)</title><rect x="51.8298%" y="116" width="0.1515%" height="15" fill="rgb(235,212,8)" fg:x="4447" fg:w="13"/><text x="52.0798%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:230) (62 samples, 0.72%)</title><rect x="51.9814%" y="116" width="0.7226%" height="15" fill="rgb(223,33,50)" fg:x="4460" fg:w="62"/><text x="52.2314%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:234) (31 samples, 0.36%)</title><rect x="52.7040%" y="116" width="0.3613%" height="15" fill="rgb(219,149,13)" fg:x="4522" fg:w="31"/><text x="52.9540%" y="126.50"></text></g><g><title>__init__ (ensembling/ensemble.py:46) (29 samples, 0.34%)</title><rect x="52.7273%" y="132" width="0.3380%" height="15" fill="rgb(250,156,29)" fg:x="4524" fg:w="29"/><text x="52.9773%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:46) (13 samples, 0.15%)</title><rect x="52.9138%" y="148" width="0.1515%" height="15" fill="rgb(216,193,19)" fg:x="4540" fg:w="13"/><text x="53.1638%" y="158.50"></text></g><g><title>id_to_token (ensembling/models.py:326) (40 samples, 0.47%)</title><rect x="53.3217%" y="148" width="0.4662%" height="15" fill="rgb(216,135,14)" fg:x="4575" fg:w="40"/><text x="53.5717%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:237) (72 samples, 0.84%)</title><rect x="53.0653%" y="116" width="0.8392%" height="15" fill="rgb(241,47,5)" fg:x="4553" fg:w="72"/><text x="53.3153%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:240) (57 samples, 0.66%)</title><rect x="53.2401%" y="132" width="0.6643%" height="15" fill="rgb(233,42,35)" fg:x="4568" fg:w="57"/><text x="53.4901%" y="142.50"></text></g><g><title>id_to_token (ensembling/models.py:327) (10 samples, 0.12%)</title><rect x="53.7879%" y="148" width="0.1166%" height="15" fill="rgb(231,13,6)" fg:x="4615" fg:w="10"/><text x="54.0379%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:254) (195 samples, 2.27%)</title><rect x="53.9977%" y="116" width="2.2727%" height="15" fill="rgb(207,181,40)" fg:x="4633" fg:w="195"/><text x="54.2477%" y="126.50">e..</text></g><g><title>__lt__ (ensembling/ensemble.py:61) (67 samples, 0.78%)</title><rect x="55.4895%" y="132" width="0.7809%" height="15" fill="rgb(254,173,49)" fg:x="4761" fg:w="67"/><text x="55.7395%" y="142.50"></text></g><g><title>__len__ (torch/_tensor.py:1022) (24 samples, 0.28%)</title><rect x="57.0047%" y="148" width="0.2797%" height="15" fill="rgb(221,1,38)" fg:x="4891" fg:w="24"/><text x="57.2547%" y="158.50"></text></g><g><title>expand_frontier (ensembling/ensemble.py:86) (63 samples, 0.73%)</title><rect x="56.6434%" y="132" width="0.7343%" height="15" fill="rgb(206,124,46)" fg:x="4860" fg:w="63"/><text x="56.8934%" y="142.50"></text></g><g><title>expand_frontier (ensembling/ensemble.py:88) (105 samples, 1.22%)</title><rect x="57.3776%" y="132" width="1.2238%" height="15" fill="rgb(249,21,11)" fg:x="4923" fg:w="105"/><text x="57.6276%" y="142.50"></text></g><g><title>expand_frontier (ensembling/ensemble.py:89) (42 samples, 0.49%)</title><rect x="58.6014%" y="132" width="0.4895%" height="15" fill="rgb(222,201,40)" fg:x="5028" fg:w="42"/><text x="58.8514%" y="142.50"></text></g><g><title>id_to_token (ensembling/models.py:326) (388 samples, 4.52%)</title><rect x="59.6970%" y="148" width="4.5221%" height="15" fill="rgb(235,61,29)" fg:x="5122" fg:w="388"/><text x="59.9470%" y="158.50">id_to..</text></g><g><title>expand_frontier (ensembling/ensemble.py:90) (575 samples, 6.70%)</title><rect x="59.0909%" y="132" width="6.7016%" height="15" fill="rgb(219,207,3)" fg:x="5070" fg:w="575"/><text x="59.3409%" y="142.50">expand_fr..</text></g><g><title>id_to_token (ensembling/models.py:327) (135 samples, 1.57%)</title><rect x="64.2191%" y="148" width="1.5734%" height="15" fill="rgb(222,56,46)" fg:x="5510" fg:w="135"/><text x="64.4691%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:257) (1,532 samples, 17.86%)</title><rect x="56.2704%" y="116" width="17.8555%" height="15" fill="rgb(239,76,54)" fg:x="4828" fg:w="1532"/><text x="56.5204%" y="126.50">ensemble_beam_search (ensemb..</text></g><g><title>expand_frontier (ensembling/ensemble.py:98) (712 samples, 8.30%)</title><rect x="65.8275%" y="132" width="8.2984%" height="15" fill="rgb(231,124,27)" fg:x="5648" fg:w="712"/><text x="66.0775%" y="142.50">expand_front..</text></g><g><title>__init__ (ensembling/ensemble.py:46) (696 samples, 8.11%)</title><rect x="66.0140%" y="148" width="8.1119%" height="15" fill="rgb(249,195,6)" fg:x="5664" fg:w="696"/><text x="66.2640%" y="158.50">__init__ (e..</text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:46) (364 samples, 4.24%)</title><rect x="69.8834%" y="164" width="4.2424%" height="15" fill="rgb(237,174,47)" fg:x="5996" fg:w="364"/><text x="70.1334%" y="174.50">&lt;list..</text></g><g><title>__str__ (ensembling/ensemble.py:52) (9 samples, 0.10%)</title><rect x="74.2424%" y="132" width="0.1049%" height="15" fill="rgb(206,201,31)" fg:x="6370" fg:w="9"/><text x="74.4924%" y="142.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:258) (28 samples, 0.33%)</title><rect x="74.1259%" y="116" width="0.3263%" height="15" fill="rgb(231,57,52)" fg:x="6360" fg:w="28"/><text x="74.3759%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:259) (19 samples, 0.22%)</title><rect x="74.4522%" y="116" width="0.2214%" height="15" fill="rgb(248,177,22)" fg:x="6388" fg:w="19"/><text x="74.7022%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:260) (193 samples, 2.25%)</title><rect x="74.6737%" y="116" width="2.2494%" height="15" fill="rgb(215,211,37)" fg:x="6407" fg:w="193"/><text x="74.9237%" y="126.50">e..</text></g><g><title>__lt__ (ensembling/ensemble.py:61) (85 samples, 0.99%)</title><rect x="75.9324%" y="132" width="0.9907%" height="15" fill="rgb(241,128,51)" fg:x="6515" fg:w="85"/><text x="76.1824%" y="142.50"></text></g><g><title>compatibility (ensembling/ensemble.py:108) (11 samples, 0.13%)</title><rect x="77.0047%" y="132" width="0.1282%" height="15" fill="rgb(227,165,31)" fg:x="6607" fg:w="11"/><text x="77.2547%" y="142.50"></text></g><g><title>id_to_token (ensembling/models.py:326) (557 samples, 6.49%)</title><rect x="77.5291%" y="180" width="6.4918%" height="15" fill="rgb(228,167,24)" fg:x="6652" fg:w="557"/><text x="77.7791%" y="190.50">id_to_tok..</text></g><g><title>_decode (ensembling/models.py:349) (775 samples, 9.03%)</title><rect x="77.4242%" y="164" width="9.0326%" height="15" fill="rgb(228,143,12)" fg:x="6643" fg:w="775"/><text x="77.6742%" y="174.50">_decode (ense..</text></g><g><title>id_to_token (ensembling/models.py:327) (209 samples, 2.44%)</title><rect x="84.0210%" y="180" width="2.4359%" height="15" fill="rgb(249,149,8)" fg:x="7209" fg:w="209"/><text x="84.2710%" y="190.50">id..</text></g><g><title>_decode (ensembling/models.py:359) (9 samples, 0.10%)</title><rect x="86.5152%" y="164" width="0.1049%" height="15" fill="rgb(243,35,44)" fg:x="7423" fg:w="9"/><text x="86.7652%" y="174.50"></text></g><g><title>_decode (ensembling/models.py:369) (169 samples, 1.97%)</title><rect x="86.6550%" y="164" width="1.9697%" height="15" fill="rgb(246,89,9)" fg:x="7435" fg:w="169"/><text x="86.9050%" y="174.50">_..</text></g><g><title>convert_tokens_to_string (ensembling/models.py:402) (159 samples, 1.85%)</title><rect x="86.7716%" y="180" width="1.8531%" height="15" fill="rgb(233,213,13)" fg:x="7445" fg:w="159"/><text x="87.0216%" y="190.50">c..</text></g><g><title>Decode (sentencepiece/__init__.py:803) (135 samples, 1.57%)</title><rect x="87.0513%" y="196" width="1.5734%" height="15" fill="rgb(233,141,41)" fg:x="7469" fg:w="135"/><text x="87.3013%" y="206.50"></text></g><g><title>_DecodePieces (sentencepiece/__init__.py:349) (129 samples, 1.50%)</title><rect x="87.1212%" y="212" width="1.5035%" height="15" fill="rgb(239,167,4)" fg:x="7475" fg:w="129"/><text x="87.3712%" y="222.50"></text></g><g><title>compatibility (ensembling/ensemble.py:109) (992 samples, 11.56%)</title><rect x="77.1329%" y="132" width="11.5618%" height="15" fill="rgb(209,217,16)" fg:x="6618" fg:w="992"/><text x="77.3829%" y="142.50">compatibility (en..</text></g><g><title>extend_beam_string (ensembling/models.py:310) (981 samples, 11.43%)</title><rect x="77.2611%" y="148" width="11.4336%" height="15" fill="rgb(219,88,35)" fg:x="6629" fg:w="981"/><text x="77.5111%" y="158.50">extend_beam_strin..</text></g><g><title>compatibility (ensembling/ensemble.py:112) (10 samples, 0.12%)</title><rect x="88.6946%" y="132" width="0.1166%" height="15" fill="rgb(220,193,23)" fg:x="7610" fg:w="10"/><text x="88.9446%" y="142.50"></text></g><g><title>compatibility (ensembling/ensemble.py:114) (244 samples, 2.84%)</title><rect x="88.8112%" y="132" width="2.8438%" height="15" fill="rgb(230,90,52)" fg:x="7620" fg:w="244"/><text x="89.0612%" y="142.50">co..</text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:114) (238 samples, 2.77%)</title><rect x="88.8811%" y="148" width="2.7739%" height="15" fill="rgb(252,106,19)" fg:x="7626" fg:w="238"/><text x="89.1311%" y="158.50">&lt;l..</text></g><g><title>is_eos (ensembling/models.py:537) (221 samples, 2.58%)</title><rect x="89.0793%" y="164" width="2.5758%" height="15" fill="rgb(206,74,20)" fg:x="7643" fg:w="221"/><text x="89.3293%" y="174.50">is..</text></g><g><title>compatibility (ensembling/ensemble.py:116) (9 samples, 0.10%)</title><rect x="91.6550%" y="132" width="0.1049%" height="15" fill="rgb(230,138,44)" fg:x="7864" fg:w="9"/><text x="91.9050%" y="142.50"></text></g><g><title>compatibility (ensembling/ensemble.py:137) (17 samples, 0.20%)</title><rect x="91.8415%" y="132" width="0.1981%" height="15" fill="rgb(235,182,43)" fg:x="7880" fg:w="17"/><text x="92.0915%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:137) (12 samples, 0.14%)</title><rect x="91.8998%" y="148" width="0.1399%" height="15" fill="rgb(242,16,51)" fg:x="7885" fg:w="12"/><text x="92.1498%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:262) (1,300 samples, 15.15%)</title><rect x="76.9231%" y="116" width="15.1515%" height="15" fill="rgb(248,9,4)" fg:x="6600" fg:w="1300"/><text x="77.1731%" y="126.50">ensemble_beam_search (e..</text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:275) (29 samples, 0.34%)</title><rect x="92.0862%" y="116" width="0.3380%" height="15" fill="rgb(210,31,22)" fg:x="7901" fg:w="29"/><text x="92.3362%" y="126.50"></text></g><g><title>update (ensembling/models.py:492) (21 samples, 0.24%)</title><rect x="92.6224%" y="132" width="0.2448%" height="15" fill="rgb(239,54,39)" fg:x="7947" fg:w="21"/><text x="92.8724%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/models.py:515) (13 samples, 0.15%)</title><rect x="93.0769%" y="148" width="0.1515%" height="15" fill="rgb(230,99,41)" fg:x="7986" fg:w="13"/><text x="93.3269%" y="158.50"></text></g><g><title>update (ensembling/models.py:515) (33 samples, 0.38%)</title><rect x="92.9953%" y="132" width="0.3846%" height="15" fill="rgb(253,106,12)" fg:x="7979" fg:w="33"/><text x="93.2453%" y="142.50"></text></g><g><title>pad_sequence (torch/nn/utils/rnn.py:397) (12 samples, 0.14%)</title><rect x="93.2401%" y="148" width="0.1399%" height="15" fill="rgb(213,46,41)" fg:x="8000" fg:w="12"/><text x="93.4901%" y="158.50"></text></g><g><title>truncate_past_key_values (ensembling/models.py:264) (256 samples, 2.98%)</title><rect x="93.7646%" y="148" width="2.9837%" height="15" fill="rgb(215,133,35)" fg:x="8045" fg:w="256"/><text x="94.0146%" y="158.50">tru..</text></g><g><title>update (ensembling/models.py:518) (290 samples, 3.38%)</title><rect x="93.3800%" y="132" width="3.3800%" height="15" fill="rgb(213,28,5)" fg:x="8012" fg:w="290"/><text x="93.6300%" y="142.50">upd..</text></g><g><title>update (ensembling/models.py:519) (12 samples, 0.14%)</title><rect x="96.7599%" y="132" width="0.1399%" height="15" fill="rgb(215,77,49)" fg:x="8302" fg:w="12"/><text x="97.0099%" y="142.50"></text></g><g><title>_update_model_kwargs_for_generation (ensembling/models.py:616) (12 samples, 0.14%)</title><rect x="96.7599%" y="148" width="0.1399%" height="15" fill="rgb(248,100,22)" fg:x="8302" fg:w="12"/><text x="97.0099%" y="158.50"></text></g><g><title>update (ensembling/models.py:523) (183 samples, 2.13%)</title><rect x="96.8998%" y="132" width="2.1329%" height="15" fill="rgb(208,67,9)" fg:x="8314" fg:w="183"/><text x="97.1498%" y="142.50">u..</text></g><g><title>_temporary_reorder_cache (ensembling/models.py:653) (182 samples, 2.12%)</title><rect x="96.9114%" y="148" width="2.1212%" height="15" fill="rgb(219,133,21)" fg:x="8315" fg:w="182"/><text x="97.1614%" y="158.50">_..</text></g><g><title>_reorder_cache (transformers/models/m2m_100/modeling_m2m_100.py:1491) (178 samples, 2.07%)</title><rect x="96.9580%" y="164" width="2.0746%" height="15" fill="rgb(246,46,29)" fg:x="8319" fg:w="178"/><text x="97.2080%" y="174.50">_..</text></g><g><title>&lt;genexpr&gt; (transformers/models/m2m_100/modeling_m2m_100.py:1491) (174 samples, 2.03%)</title><rect x="97.0047%" y="180" width="2.0280%" height="15" fill="rgb(246,185,52)" fg:x="8323" fg:w="174"/><text x="97.2547%" y="190.50">&lt;..</text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:309) (567 samples, 6.61%)</title><rect x="92.6107%" y="116" width="6.6084%" height="15" fill="rgb(252,136,11)" fg:x="7946" fg:w="567"/><text x="92.8607%" y="126.50">ensemble_..</text></g><g><title>update (ensembling/models.py:524) (16 samples, 0.19%)</title><rect x="99.0326%" y="132" width="0.1865%" height="15" fill="rgb(219,138,53)" fg:x="8497" fg:w="16"/><text x="99.2826%" y="142.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1363) (12 samples, 0.14%)</title><rect x="99.2308%" y="180" width="0.1399%" height="15" fill="rgb(211,51,23)" fg:x="8514" fg:w="12"/><text x="99.4808%" y="190.50"></text></g><g><title>all_special_tokens (transformers/tokenization_utils_base.py:1355) (12 samples, 0.14%)</title><rect x="99.2308%" y="196" width="0.1399%" height="15" fill="rgb(247,221,28)" fg:x="8514" fg:w="12"/><text x="99.4808%" y="206.50"></text></g><g><title>_decode (transformers/tokenization_utils.py:1072) (22 samples, 0.26%)</title><rect x="99.2308%" y="148" width="0.2564%" height="15" fill="rgb(251,222,45)" fg:x="8514" fg:w="22"/><text x="99.4808%" y="158.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils.py:1048) (22 samples, 0.26%)</title><rect x="99.2308%" y="164" width="0.2564%" height="15" fill="rgb(217,162,53)" fg:x="8514" fg:w="22"/><text x="99.4808%" y="174.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1364) (10 samples, 0.12%)</title><rect x="99.3706%" y="180" width="0.1166%" height="15" fill="rgb(229,93,14)" fg:x="8526" fg:w="10"/><text x="99.6206%" y="190.50"></text></g><g><title>convert_tokens_to_ids (transformers/tokenization_utils.py:718) (10 samples, 0.12%)</title><rect x="99.3706%" y="196" width="0.1166%" height="15" fill="rgb(209,67,49)" fg:x="8526" fg:w="10"/><text x="99.6206%" y="206.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1363) (10 samples, 0.12%)</title><rect x="99.5221%" y="164" width="0.1166%" height="15" fill="rgb(213,87,29)" fg:x="8539" fg:w="10"/><text x="99.7721%" y="174.50"></text></g><g><title>all_special_tokens (transformers/tokenization_utils_base.py:1355) (10 samples, 0.12%)</title><rect x="99.5221%" y="180" width="0.1166%" height="15" fill="rgb(205,151,52)" fg:x="8539" fg:w="10"/><text x="99.7721%" y="190.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:326) (45 samples, 0.52%)</title><rect x="99.2191%" y="116" width="0.5245%" height="15" fill="rgb(253,215,39)" fg:x="8513" fg:w="45"/><text x="99.4691%" y="126.50"></text></g><g><title>decode (transformers/tokenization_utils_base.py:4034) (45 samples, 0.52%)</title><rect x="99.2191%" y="132" width="0.5245%" height="15" fill="rgb(221,220,41)" fg:x="8513" fg:w="45"/><text x="99.4691%" y="142.50"></text></g><g><title>_decode (transformers/tokenization_utils.py:1083) (20 samples, 0.23%)</title><rect x="99.5105%" y="148" width="0.2331%" height="15" fill="rgb(218,133,21)" fg:x="8538" fg:w="20"/><text x="99.7605%" y="158.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1364) (9 samples, 0.10%)</title><rect x="99.6387%" y="164" width="0.1049%" height="15" fill="rgb(221,193,43)" fg:x="8549" fg:w="9"/><text x="99.8887%" y="174.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:333) (20 samples, 0.23%)</title><rect x="99.7436%" y="116" width="0.2331%" height="15" fill="rgb(240,128,52)" fg:x="8558" fg:w="20"/><text x="99.9936%" y="126.50"></text></g><g><title>decode (transformers/tokenization_utils_base.py:4034) (20 samples, 0.23%)</title><rect x="99.7436%" y="132" width="0.2331%" height="15" fill="rgb(253,114,12)" fg:x="8558" fg:w="20"/><text x="99.9936%" y="142.50"></text></g><g><title>_decode (transformers/tokenization_utils.py:1083) (11 samples, 0.13%)</title><rect x="99.8485%" y="148" width="0.1282%" height="15" fill="rgb(215,223,47)" fg:x="8567" fg:w="11"/><text x="100.0985%" y="158.50"></text></g><g><title>&lt;module&gt; (ensembling/ensemble.py:435) (8,579 samples, 99.99%)</title><rect x="0.0000%" y="68" width="99.9883%" height="15" fill="rgb(248,225,23)" fg:x="0" fg:w="8579"/><text x="0.2500%" y="78.50">&lt;module&gt; (ensembling/ensemble.py:435)</text></g><g><title>main (ensembling/ensemble.py:396) (8,451 samples, 98.50%)</title><rect x="1.4918%" y="84" width="98.4965%" height="15" fill="rgb(250,108,0)" fg:x="128" fg:w="8451"/><text x="1.7418%" y="94.50">main (ensembling/ensemble.py:396)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:116) (8,451 samples, 98.50%)</title><rect x="1.4918%" y="100" width="98.4965%" height="15" fill="rgb(228,208,7)" fg:x="128" fg:w="8451"/><text x="1.7418%" y="110.50">decorate_context (torch/utils/_contextlib.py:116)</text></g><g><title>all (8,580 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(244,45,10)" fg:x="0" fg:w="8580"/><text x="0.2500%" y="62.50"></text></g></svg></svg>