<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="458" onload="init(evt)" viewBox="0 0 1200 458" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="458" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg --pid 70540</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="447.00"> </text><svg id="frames" x="10" width="1180" total_samples="6521"><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:470) (22 samples, 0.34%)</title><rect x="0.1687%" y="228" width="0.3374%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="22"/><text x="0.4187%" y="238.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (22 samples, 0.34%)</title><rect x="0.1687%" y="244" width="0.3374%" height="15" fill="rgb(217,0,24)" fg:x="11" fg:w="22"/><text x="0.4187%" y="254.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (22 samples, 0.34%)</title><rect x="0.1687%" y="260" width="0.3374%" height="15" fill="rgb(221,193,54)" fg:x="11" fg:w="22"/><text x="0.4187%" y="270.50"></text></g><g><title>set_input (ensembling/models.py:170) (39 samples, 0.60%)</title><rect x="0.1073%" y="132" width="0.5981%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="39"/><text x="0.3573%" y="142.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (39 samples, 0.60%)</title><rect x="0.1073%" y="148" width="0.5981%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="39"/><text x="0.3573%" y="158.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (39 samples, 0.60%)</title><rect x="0.1073%" y="164" width="0.5981%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="39"/><text x="0.3573%" y="174.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:925) (37 samples, 0.57%)</title><rect x="0.1380%" y="180" width="0.5674%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="37"/><text x="0.3880%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (37 samples, 0.57%)</title><rect x="0.1380%" y="196" width="0.5674%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="37"/><text x="0.3880%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (37 samples, 0.57%)</title><rect x="0.1380%" y="212" width="0.5674%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="37"/><text x="0.3880%" y="222.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:187) (48 samples, 0.74%)</title><rect x="0.0153%" y="116" width="0.7361%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="48"/><text x="0.2653%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:212) (7 samples, 0.11%)</title><rect x="0.7974%" y="116" width="0.1073%" height="15" fill="rgb(250,228,42)" fg:x="52" fg:w="7"/><text x="1.0474%" y="126.50"></text></g><g><title>step (ensembling/models.py:228) (7 samples, 0.11%)</title><rect x="1.0581%" y="132" width="0.1073%" height="15" fill="rgb(240,193,28)" fg:x="69" fg:w="7"/><text x="1.3081%" y="142.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1091) (10 samples, 0.15%)</title><rect x="1.3802%" y="276" width="0.1534%" height="15" fill="rgb(216,20,37)" fg:x="90" fg:w="10"/><text x="1.6302%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (9 samples, 0.14%)</title><rect x="1.3955%" y="292" width="0.1380%" height="15" fill="rgb(206,188,39)" fg:x="91" fg:w="9"/><text x="1.6455%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (8 samples, 0.12%)</title><rect x="1.4108%" y="308" width="0.1227%" height="15" fill="rgb(217,207,13)" fg:x="92" fg:w="8"/><text x="1.6608%" y="318.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:96) (8 samples, 0.12%)</title><rect x="1.4108%" y="324" width="0.1227%" height="15" fill="rgb(231,73,38)" fg:x="92" fg:w="8"/><text x="1.6608%" y="334.50"></text></g><g><title>_make_causal_mask (transformers/modeling_attn_mask_utils.py:157) (7 samples, 0.11%)</title><rect x="1.6102%" y="324" width="0.1073%" height="15" fill="rgb(225,20,46)" fg:x="105" fg:w="7"/><text x="1.8602%" y="334.50"></text></g><g><title>_make_causal_mask (transformers/modeling_attn_mask_utils.py:158) (9 samples, 0.14%)</title><rect x="1.7175%" y="324" width="0.1380%" height="15" fill="rgb(210,31,41)" fg:x="112" fg:w="9"/><text x="1.9675%" y="334.50"></text></g><g><title>to_4d (transformers/modeling_attn_mask_utils.py:121) (27 samples, 0.41%)</title><rect x="1.5335%" y="308" width="0.4140%" height="15" fill="rgb(221,200,47)" fg:x="100" fg:w="27"/><text x="1.7835%" y="318.50"></text></g><g><title>_expand_mask (transformers/modeling_attn_mask_utils.py:182) (8 samples, 0.12%)</title><rect x="1.9476%" y="324" width="0.1227%" height="15" fill="rgb(226,26,5)" fg:x="127" fg:w="8"/><text x="2.1976%" y="334.50"></text></g><g><title>to_4d (transformers/modeling_attn_mask_utils.py:132) (20 samples, 0.31%)</title><rect x="1.9476%" y="308" width="0.3067%" height="15" fill="rgb(249,33,26)" fg:x="127" fg:w="20"/><text x="2.1976%" y="318.50"></text></g><g><title>_expand_mask (transformers/modeling_attn_mask_utils.py:186) (9 samples, 0.14%)</title><rect x="2.1162%" y="324" width="0.1380%" height="15" fill="rgb(235,183,28)" fg:x="138" fg:w="9"/><text x="2.3662%" y="334.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1098) (51 samples, 0.78%)</title><rect x="1.5335%" y="276" width="0.7821%" height="15" fill="rgb(221,5,38)" fg:x="100" fg:w="51"/><text x="1.7835%" y="286.50"></text></g><g><title>_prepare_4d_causal_attention_mask (transformers/modeling_attn_mask_utils.py:321) (51 samples, 0.78%)</title><rect x="1.5335%" y="292" width="0.7821%" height="15" fill="rgb(247,18,42)" fg:x="100" fg:w="51"/><text x="1.7835%" y="302.50"></text></g><g><title>create_position_ids_from_input_ids (transformers/models/m2m_100/modeling_m2m_100.py:80) (7 samples, 0.11%)</title><rect x="2.3923%" y="356" width="0.1073%" height="15" fill="rgb(241,131,45)" fg:x="156" fg:w="7"/><text x="2.6423%" y="366.50"></text></g><g><title>create_position_ids_from_input_ids (transformers/models/m2m_100/modeling_m2m_100.py:81) (16 samples, 0.25%)</title><rect x="2.4996%" y="356" width="0.2454%" height="15" fill="rgb(249,31,29)" fg:x="163" fg:w="16"/><text x="2.7496%" y="366.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:145) (29 samples, 0.44%)</title><rect x="2.3769%" y="340" width="0.4447%" height="15" fill="rgb(225,111,53)" fg:x="155" fg:w="29"/><text x="2.6269%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1113) (43 samples, 0.66%)</title><rect x="2.3156%" y="276" width="0.6594%" height="15" fill="rgb(238,160,17)" fg:x="151" fg:w="43"/><text x="2.5656%" y="286.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (43 samples, 0.66%)</title><rect x="2.3156%" y="292" width="0.6594%" height="15" fill="rgb(214,148,48)" fg:x="151" fg:w="43"/><text x="2.5656%" y="302.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (41 samples, 0.63%)</title><rect x="2.3463%" y="308" width="0.6287%" height="15" fill="rgb(232,36,49)" fg:x="153" fg:w="41"/><text x="2.5963%" y="318.50"></text></g><g><title>decorate_context (torch/utils/_contextlib.py:116) (39 samples, 0.60%)</title><rect x="2.3769%" y="324" width="0.5981%" height="15" fill="rgb(209,103,24)" fg:x="155" fg:w="39"/><text x="2.6269%" y="334.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:157) (9 samples, 0.14%)</title><rect x="2.8370%" y="340" width="0.1380%" height="15" fill="rgb(229,88,8)" fg:x="185" fg:w="9"/><text x="3.0870%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1148) (22 samples, 0.34%)</title><rect x="3.1437%" y="276" width="0.3374%" height="15" fill="rgb(213,181,19)" fg:x="205" fg:w="22"/><text x="3.3937%" y="286.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:202) (50 samples, 0.77%)</title><rect x="4.0485%" y="372" width="0.7668%" height="15" fill="rgb(254,191,54)" fg:x="264" fg:w="50"/><text x="4.2985%" y="382.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2576) (47 samples, 0.72%)</title><rect x="4.0945%" y="388" width="0.7207%" height="15" fill="rgb(241,83,37)" fg:x="267" fg:w="47"/><text x="4.3445%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:569) (66 samples, 1.01%)</title><rect x="3.8184%" y="324" width="1.0121%" height="15" fill="rgb(233,36,39)" fg:x="249" fg:w="66"/><text x="4.0684%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (59 samples, 0.90%)</title><rect x="3.9258%" y="340" width="0.9048%" height="15" fill="rgb(226,3,54)" fg:x="256" fg:w="59"/><text x="4.1758%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (51 samples, 0.78%)</title><rect x="4.0485%" y="356" width="0.7821%" height="15" fill="rgb(245,192,40)" fg:x="264" fg:w="51"/><text x="4.2985%" y="366.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:233) (159 samples, 2.44%)</title><rect x="5.4440%" y="372" width="2.4383%" height="15" fill="rgb(238,167,29)" fg:x="355" fg:w="159"/><text x="5.6940%" y="382.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (97 samples, 1.49%)</title><rect x="6.3947%" y="388" width="1.4875%" height="15" fill="rgb(232,182,51)" fg:x="417" fg:w="97"/><text x="6.6447%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (96 samples, 1.47%)</title><rect x="6.4101%" y="404" width="1.4722%" height="15" fill="rgb(231,60,39)" fg:x="418" fg:w="96"/><text x="6.6601%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (96 samples, 1.47%)</title><rect x="6.4101%" y="420" width="1.4722%" height="15" fill="rgb(208,69,12)" fg:x="418" fg:w="96"/><text x="6.6601%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (62 samples, 0.95%)</title><rect x="8.0509%" y="388" width="0.9508%" height="15" fill="rgb(235,93,37)" fg:x="525" fg:w="62"/><text x="8.3009%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:258) (165 samples, 2.53%)</title><rect x="7.8822%" y="372" width="2.5303%" height="15" fill="rgb(213,116,39)" fg:x="514" fg:w="165"/><text x="8.1322%" y="382.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (92 samples, 1.41%)</title><rect x="9.0017%" y="388" width="1.4108%" height="15" fill="rgb(222,207,29)" fg:x="587" fg:w="92"/><text x="9.2517%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (89 samples, 1.36%)</title><rect x="9.0477%" y="404" width="1.3648%" height="15" fill="rgb(206,96,30)" fg:x="590" fg:w="89"/><text x="9.2977%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (89 samples, 1.36%)</title><rect x="9.0477%" y="420" width="1.3648%" height="15" fill="rgb(218,138,4)" fg:x="590" fg:w="89"/><text x="9.2977%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (63 samples, 0.97%)</title><rect x="10.5505%" y="388" width="0.9661%" height="15" fill="rgb(250,191,14)" fg:x="688" fg:w="63"/><text x="10.8005%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:259) (151 samples, 2.32%)</title><rect x="10.4125%" y="372" width="2.3156%" height="15" fill="rgb(239,60,40)" fg:x="679" fg:w="151"/><text x="10.6625%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (79 samples, 1.21%)</title><rect x="11.5166%" y="388" width="1.2115%" height="15" fill="rgb(206,27,48)" fg:x="751" fg:w="79"/><text x="11.7666%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (76 samples, 1.17%)</title><rect x="11.5626%" y="404" width="1.1655%" height="15" fill="rgb(225,35,8)" fg:x="754" fg:w="76"/><text x="11.8126%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (76 samples, 1.17%)</title><rect x="11.5626%" y="420" width="1.1655%" height="15" fill="rgb(250,213,24)" fg:x="754" fg:w="76"/><text x="11.8126%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:272) (64 samples, 0.98%)</title><rect x="12.7588%" y="372" width="0.9814%" height="15" fill="rgb(247,123,22)" fg:x="832" fg:w="64"/><text x="13.0088%" y="382.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (52 samples, 0.80%)</title><rect x="12.9428%" y="388" width="0.7974%" height="15" fill="rgb(231,138,38)" fg:x="844" fg:w="52"/><text x="13.1928%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:273) (8 samples, 0.12%)</title><rect x="13.7402%" y="372" width="0.1227%" height="15" fill="rgb(231,145,46)" fg:x="896" fg:w="8"/><text x="13.9902%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:274) (10 samples, 0.15%)</title><rect x="13.8629%" y="372" width="0.1534%" height="15" fill="rgb(251,118,11)" fg:x="904" fg:w="10"/><text x="14.1129%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:277) (44 samples, 0.67%)</title><rect x="14.0469%" y="372" width="0.6747%" height="15" fill="rgb(217,147,25)" fg:x="916" fg:w="44"/><text x="14.2969%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:290) (49 samples, 0.75%)</title><rect x="14.7983%" y="372" width="0.7514%" height="15" fill="rgb(247,81,37)" fg:x="965" fg:w="49"/><text x="15.0483%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:291) (7 samples, 0.11%)</title><rect x="15.5498%" y="372" width="0.1073%" height="15" fill="rgb(209,12,38)" fg:x="1014" fg:w="7"/><text x="15.7998%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:293) (42 samples, 0.64%)</title><rect x="15.6571%" y="372" width="0.6441%" height="15" fill="rgb(227,1,9)" fg:x="1021" fg:w="42"/><text x="15.9071%" y="382.50"></text></g><g><title>softmax (torch/nn/functional.py:1888) (30 samples, 0.46%)</title><rect x="15.8411%" y="388" width="0.4601%" height="15" fill="rgb(248,47,43)" fg:x="1033" fg:w="30"/><text x="16.0911%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:314) (19 samples, 0.29%)</title><rect x="16.3012%" y="372" width="0.2914%" height="15" fill="rgb(221,10,30)" fg:x="1063" fg:w="19"/><text x="16.5512%" y="382.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (18 samples, 0.28%)</title><rect x="16.3165%" y="388" width="0.2760%" height="15" fill="rgb(210,229,1)" fg:x="1064" fg:w="18"/><text x="16.5665%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:316) (35 samples, 0.54%)</title><rect x="16.5925%" y="372" width="0.5367%" height="15" fill="rgb(222,148,37)" fg:x="1082" fg:w="35"/><text x="16.8425%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:324) (16 samples, 0.25%)</title><rect x="17.2213%" y="372" width="0.2454%" height="15" fill="rgb(234,67,33)" fg:x="1123" fg:w="16"/><text x="17.4713%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:325) (7 samples, 0.11%)</title><rect x="17.4666%" y="372" width="0.1073%" height="15" fill="rgb(247,98,35)" fg:x="1139" fg:w="7"/><text x="17.7166%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:329) (51 samples, 0.78%)</title><rect x="17.5740%" y="372" width="0.7821%" height="15" fill="rgb(247,138,52)" fg:x="1146" fg:w="51"/><text x="17.8240%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:575) (987 samples, 15.14%)</title><rect x="4.8305%" y="324" width="15.1357%" height="15" fill="rgb(213,79,30)" fg:x="315" fg:w="987"/><text x="5.0805%" y="334.50">forward (transformers/m..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (971 samples, 14.89%)</title><rect x="5.0759%" y="340" width="14.8904%" height="15" fill="rgb(246,177,23)" fg:x="331" fg:w="971"/><text x="5.3259%" y="350.50">_wrapped_call_impl (tor..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (966 samples, 14.81%)</title><rect x="5.1526%" y="356" width="14.8137%" height="15" fill="rgb(230,62,27)" fg:x="336" fg:w="966"/><text x="5.4026%" y="366.50">_call_impl (torch/nn/mo..</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:331) (105 samples, 1.61%)</title><rect x="18.3561%" y="372" width="1.6102%" height="15" fill="rgb(216,154,8)" fg:x="1197" fg:w="105"/><text x="18.6061%" y="382.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (96 samples, 1.47%)</title><rect x="18.4941%" y="388" width="1.4722%" height="15" fill="rgb(244,35,45)" fg:x="1206" fg:w="96"/><text x="18.7441%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (89 samples, 1.36%)</title><rect x="18.6014%" y="404" width="1.3648%" height="15" fill="rgb(251,115,12)" fg:x="1213" fg:w="89"/><text x="18.8514%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (88 samples, 1.35%)</title><rect x="18.6168%" y="420" width="1.3495%" height="15" fill="rgb(240,54,50)" fg:x="1214" fg:w="88"/><text x="18.8668%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:582) (23 samples, 0.35%)</title><rect x="19.9663%" y="324" width="0.3527%" height="15" fill="rgb(233,84,52)" fg:x="1302" fg:w="23"/><text x="20.2163%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (20 samples, 0.31%)</title><rect x="20.0123%" y="340" width="0.3067%" height="15" fill="rgb(207,117,47)" fg:x="1305" fg:w="20"/><text x="20.2623%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:583) (45 samples, 0.69%)</title><rect x="20.3190%" y="324" width="0.6901%" height="15" fill="rgb(249,43,39)" fg:x="1325" fg:w="45"/><text x="20.5690%" y="334.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:202) (61 samples, 0.94%)</title><rect x="21.2544%" y="372" width="0.9354%" height="15" fill="rgb(209,38,44)" fg:x="1386" fg:w="61"/><text x="21.5044%" y="382.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2576) (60 samples, 0.92%)</title><rect x="21.2697%" y="388" width="0.9201%" height="15" fill="rgb(236,212,23)" fg:x="1387" fg:w="60"/><text x="21.5197%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:590) (85 samples, 1.30%)</title><rect x="21.0090%" y="324" width="1.3035%" height="15" fill="rgb(242,79,21)" fg:x="1370" fg:w="85"/><text x="21.2590%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (76 samples, 1.17%)</title><rect x="21.1471%" y="340" width="1.1655%" height="15" fill="rgb(211,96,35)" fg:x="1379" fg:w="76"/><text x="21.3971%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (69 samples, 1.06%)</title><rect x="21.2544%" y="356" width="1.0581%" height="15" fill="rgb(253,215,40)" fg:x="1386" fg:w="69"/><text x="21.5044%" y="366.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:203) (8 samples, 0.12%)</title><rect x="22.1898%" y="372" width="0.1227%" height="15" fill="rgb(211,81,21)" fg:x="1447" fg:w="8"/><text x="22.4398%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:233) (133 samples, 2.04%)</title><rect x="22.9566%" y="372" width="2.0396%" height="15" fill="rgb(208,190,38)" fg:x="1497" fg:w="133"/><text x="23.2066%" y="382.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (75 samples, 1.15%)</title><rect x="23.8460%" y="388" width="1.1501%" height="15" fill="rgb(235,213,38)" fg:x="1555" fg:w="75"/><text x="24.0960%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (72 samples, 1.10%)</title><rect x="23.8920%" y="404" width="1.1041%" height="15" fill="rgb(237,122,38)" fg:x="1558" fg:w="72"/><text x="24.1420%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (72 samples, 1.10%)</title><rect x="23.8920%" y="420" width="1.1041%" height="15" fill="rgb(244,218,35)" fg:x="1558" fg:w="72"/><text x="24.1420%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (67 samples, 1.03%)</title><rect x="25.1955%" y="388" width="1.0274%" height="15" fill="rgb(240,68,47)" fg:x="1643" fg:w="67"/><text x="25.4455%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:248) (180 samples, 2.76%)</title><rect x="25.0115%" y="372" width="2.7603%" height="15" fill="rgb(210,16,53)" fg:x="1631" fg:w="180"/><text x="25.2615%" y="382.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (101 samples, 1.55%)</title><rect x="26.2230%" y="388" width="1.5488%" height="15" fill="rgb(235,124,12)" fg:x="1710" fg:w="101"/><text x="26.4730%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (99 samples, 1.52%)</title><rect x="26.2536%" y="404" width="1.5182%" height="15" fill="rgb(224,169,11)" fg:x="1712" fg:w="99"/><text x="26.5036%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (98 samples, 1.50%)</title><rect x="26.2690%" y="420" width="1.5028%" height="15" fill="rgb(250,166,2)" fg:x="1713" fg:w="98"/><text x="26.5190%" y="430.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (60 samples, 0.92%)</title><rect x="27.9252%" y="388" width="0.9201%" height="15" fill="rgb(242,216,29)" fg:x="1821" fg:w="60"/><text x="28.1752%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:249) (160 samples, 2.45%)</title><rect x="27.7718%" y="372" width="2.4536%" height="15" fill="rgb(230,116,27)" fg:x="1811" fg:w="160"/><text x="28.0218%" y="382.50">fo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (90 samples, 1.38%)</title><rect x="28.8453%" y="388" width="1.3802%" height="15" fill="rgb(228,99,48)" fg:x="1881" fg:w="90"/><text x="29.0953%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (82 samples, 1.26%)</title><rect x="28.9679%" y="404" width="1.2575%" height="15" fill="rgb(253,11,6)" fg:x="1889" fg:w="82"/><text x="29.2179%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (81 samples, 1.24%)</title><rect x="28.9833%" y="420" width="1.2421%" height="15" fill="rgb(247,143,39)" fg:x="1890" fg:w="81"/><text x="29.2333%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:272) (55 samples, 0.84%)</title><rect x="30.2714%" y="372" width="0.8434%" height="15" fill="rgb(236,97,10)" fg:x="1974" fg:w="55"/><text x="30.5214%" y="382.50"></text></g><g><title>_shape (transformers/models/m2m_100/modeling_m2m_100.py:213) (48 samples, 0.74%)</title><rect x="30.3788%" y="388" width="0.7361%" height="15" fill="rgb(233,208,19)" fg:x="1981" fg:w="48"/><text x="30.6288%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:273) (9 samples, 0.14%)</title><rect x="31.1149%" y="372" width="0.1380%" height="15" fill="rgb(216,164,2)" fg:x="2029" fg:w="9"/><text x="31.3649%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:277) (66 samples, 1.01%)</title><rect x="31.3602%" y="372" width="1.0121%" height="15" fill="rgb(220,129,5)" fg:x="2045" fg:w="66"/><text x="31.6102%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:293) (40 samples, 0.61%)</title><rect x="32.4337%" y="372" width="0.6134%" height="15" fill="rgb(242,17,10)" fg:x="2115" fg:w="40"/><text x="32.6837%" y="382.50"></text></g><g><title>softmax (torch/nn/functional.py:1888) (32 samples, 0.49%)</title><rect x="32.5564%" y="388" width="0.4907%" height="15" fill="rgb(242,107,0)" fg:x="2123" fg:w="32"/><text x="32.8064%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:314) (31 samples, 0.48%)</title><rect x="33.0471%" y="372" width="0.4754%" height="15" fill="rgb(251,28,31)" fg:x="2155" fg:w="31"/><text x="33.2971%" y="382.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (25 samples, 0.38%)</title><rect x="33.1391%" y="388" width="0.3834%" height="15" fill="rgb(233,223,10)" fg:x="2161" fg:w="25"/><text x="33.3891%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:316) (55 samples, 0.84%)</title><rect x="33.5225%" y="372" width="0.8434%" height="15" fill="rgb(215,21,27)" fg:x="2186" fg:w="55"/><text x="33.7725%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:324) (8 samples, 0.12%)</title><rect x="34.3966%" y="372" width="0.1227%" height="15" fill="rgb(232,23,21)" fg:x="2243" fg:w="8"/><text x="34.6466%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:329) (44 samples, 0.67%)</title><rect x="34.6113%" y="372" width="0.6747%" height="15" fill="rgb(244,5,23)" fg:x="2257" fg:w="44"/><text x="34.8613%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:594) (949 samples, 14.55%)</title><rect x="22.3279%" y="324" width="14.5530%" height="15" fill="rgb(226,81,46)" fg:x="1456" fg:w="949"/><text x="22.5779%" y="334.50">forward (transformers/..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (934 samples, 14.32%)</title><rect x="22.5579%" y="340" width="14.3230%" height="15" fill="rgb(247,70,30)" fg:x="1471" fg:w="934"/><text x="22.8079%" y="350.50">_wrapped_call_impl (to..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (925 samples, 14.18%)</title><rect x="22.6959%" y="356" width="14.1849%" height="15" fill="rgb(212,68,19)" fg:x="1480" fg:w="925"/><text x="22.9459%" y="366.50">_call_impl (torch/nn/m..</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:331) (104 samples, 1.59%)</title><rect x="35.2860%" y="372" width="1.5948%" height="15" fill="rgb(240,187,13)" fg:x="2301" fg:w="104"/><text x="35.5360%" y="382.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (90 samples, 1.38%)</title><rect x="35.5007%" y="388" width="1.3802%" height="15" fill="rgb(223,113,26)" fg:x="2315" fg:w="90"/><text x="35.7507%" y="398.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (85 samples, 1.30%)</title><rect x="35.5774%" y="404" width="1.3035%" height="15" fill="rgb(206,192,2)" fg:x="2320" fg:w="85"/><text x="35.8274%" y="414.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (82 samples, 1.26%)</title><rect x="35.6234%" y="420" width="1.2575%" height="15" fill="rgb(241,108,4)" fg:x="2323" fg:w="82"/><text x="35.8734%" y="430.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:602) (14 samples, 0.21%)</title><rect x="36.8808%" y="324" width="0.2147%" height="15" fill="rgb(247,173,49)" fg:x="2405" fg:w="14"/><text x="37.1308%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (12 samples, 0.18%)</title><rect x="36.9115%" y="340" width="0.1840%" height="15" fill="rgb(224,114,35)" fg:x="2407" fg:w="12"/><text x="37.1615%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:603) (48 samples, 0.74%)</title><rect x="37.0955%" y="324" width="0.7361%" height="15" fill="rgb(245,159,27)" fg:x="2419" fg:w="48"/><text x="37.3455%" y="334.50"></text></g><g><title>forward (torch/nn/modules/normalization.py:202) (55 samples, 0.84%)</title><rect x="38.2610%" y="372" width="0.8434%" height="15" fill="rgb(245,172,44)" fg:x="2495" fg:w="55"/><text x="38.5110%" y="382.50"></text></g><g><title>layer_norm (torch/nn/functional.py:2576) (53 samples, 0.81%)</title><rect x="38.2917%" y="388" width="0.8128%" height="15" fill="rgb(236,23,11)" fg:x="2497" fg:w="53"/><text x="38.5417%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:610) (84 samples, 1.29%)</title><rect x="37.8776%" y="324" width="1.2881%" height="15" fill="rgb(205,117,38)" fg:x="2470" fg:w="84"/><text x="38.1276%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (69 samples, 1.06%)</title><rect x="38.1077%" y="340" width="1.0581%" height="15" fill="rgb(237,72,25)" fg:x="2485" fg:w="69"/><text x="38.3577%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (60 samples, 0.92%)</title><rect x="38.2457%" y="356" width="0.9201%" height="15" fill="rgb(244,70,9)" fg:x="2494" fg:w="60"/><text x="38.4957%" y="366.50"></text></g><g><title>forward (torch/nn/modules/activation.py:104) (28 samples, 0.43%)</title><rect x="39.6105%" y="372" width="0.4294%" height="15" fill="rgb(217,125,39)" fg:x="2583" fg:w="28"/><text x="39.8605%" y="382.50"></text></g><g><title>relu (torch/nn/functional.py:1500) (28 samples, 0.43%)</title><rect x="39.6105%" y="388" width="0.4294%" height="15" fill="rgb(235,36,10)" fg:x="2583" fg:w="28"/><text x="39.8605%" y="398.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:611) (143 samples, 2.19%)</title><rect x="39.1658%" y="324" width="2.1929%" height="15" fill="rgb(251,123,47)" fg:x="2554" fg:w="143"/><text x="39.4158%" y="334.50">f..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (125 samples, 1.92%)</title><rect x="39.4418%" y="340" width="1.9169%" height="15" fill="rgb(221,13,13)" fg:x="2572" fg:w="125"/><text x="39.6918%" y="350.50">_..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (115 samples, 1.76%)</title><rect x="39.5952%" y="356" width="1.7635%" height="15" fill="rgb(238,131,9)" fg:x="2582" fg:w="115"/><text x="39.8452%" y="366.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (86 samples, 1.32%)</title><rect x="40.0399%" y="372" width="1.3188%" height="15" fill="rgb(211,50,8)" fg:x="2611" fg:w="86"/><text x="40.2899%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:612) (19 samples, 0.29%)</title><rect x="41.3587%" y="324" width="0.2914%" height="15" fill="rgb(245,182,24)" fg:x="2697" fg:w="19"/><text x="41.6087%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (19 samples, 0.29%)</title><rect x="41.3587%" y="340" width="0.2914%" height="15" fill="rgb(242,14,37)" fg:x="2697" fg:w="19"/><text x="41.6087%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:613) (89 samples, 1.36%)</title><rect x="41.6501%" y="324" width="1.3648%" height="15" fill="rgb(246,228,12)" fg:x="2716" fg:w="89"/><text x="41.9001%" y="334.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (88 samples, 1.35%)</title><rect x="41.6654%" y="340" width="1.3495%" height="15" fill="rgb(213,55,15)" fg:x="2717" fg:w="88"/><text x="41.9154%" y="350.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (81 samples, 1.24%)</title><rect x="41.7727%" y="356" width="1.2421%" height="15" fill="rgb(209,9,3)" fg:x="2724" fg:w="81"/><text x="42.0227%" y="366.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (81 samples, 1.24%)</title><rect x="41.7727%" y="372" width="1.2421%" height="15" fill="rgb(230,59,30)" fg:x="2724" fg:w="81"/><text x="42.0227%" y="382.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:614) (14 samples, 0.21%)</title><rect x="43.0149%" y="324" width="0.2147%" height="15" fill="rgb(209,121,21)" fg:x="2805" fg:w="14"/><text x="43.2649%" y="334.50"></text></g><g><title>dropout (torch/nn/functional.py:1295) (8 samples, 0.12%)</title><rect x="43.1069%" y="340" width="0.1227%" height="15" fill="rgb(220,109,13)" fg:x="2811" fg:w="8"/><text x="43.3569%" y="350.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:615) (37 samples, 0.57%)</title><rect x="43.2296%" y="324" width="0.5674%" height="15" fill="rgb(232,18,1)" fg:x="2819" fg:w="37"/><text x="43.4796%" y="334.50"></text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1170) (2,629 samples, 40.32%)</title><rect x="3.5117%" y="276" width="40.3159%" height="15" fill="rgb(215,41,42)" fg:x="229" fg:w="2629"/><text x="3.7617%" y="286.50">forward (transformers/models/m2m_100/modeling_m2m_100.py:1170)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (2,625 samples, 40.25%)</title><rect x="3.5731%" y="292" width="40.2546%" height="15" fill="rgb(224,123,36)" fg:x="233" fg:w="2625"/><text x="3.8231%" y="302.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (2,615 samples, 40.10%)</title><rect x="3.7264%" y="308" width="40.1012%" height="15" fill="rgb(240,125,3)" fg:x="243" fg:w="2615"/><text x="3.9764%" y="318.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1312) (2,790 samples, 42.78%)</title><rect x="1.3035%" y="228" width="42.7848%" height="15" fill="rgb(205,98,50)" fg:x="85" fg:w="2790"/><text x="1.5535%" y="238.50">forward (transformers/models/m2m_100/modeling_m2m_100.py:1312)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (2,787 samples, 42.74%)</title><rect x="1.3495%" y="244" width="42.7388%" height="15" fill="rgb(205,185,37)" fg:x="88" fg:w="2787"/><text x="1.5995%" y="254.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (2,787 samples, 42.74%)</title><rect x="1.3495%" y="260" width="42.7388%" height="15" fill="rgb(238,207,15)" fg:x="88" fg:w="2787"/><text x="1.5995%" y="270.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1407) (2,794 samples, 42.85%)</title><rect x="1.2575%" y="180" width="42.8462%" height="15" fill="rgb(213,199,42)" fg:x="82" fg:w="2794"/><text x="1.5075%" y="190.50">forward (transformers/models/m2m_100/modeling_m2m_100.py:1407)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (2,792 samples, 42.82%)</title><rect x="1.2881%" y="196" width="42.8155%" height="15" fill="rgb(235,201,11)" fg:x="84" fg:w="2792"/><text x="1.5381%" y="206.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (2,792 samples, 42.82%)</title><rect x="1.2881%" y="212" width="42.8155%" height="15" fill="rgb(207,46,11)" fg:x="84" fg:w="2792"/><text x="1.5381%" y="222.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>forward (transformers/models/m2m_100/modeling_m2m_100.py:1424) (13 samples, 0.20%)</title><rect x="44.1037%" y="180" width="0.1994%" height="15" fill="rgb(241,35,35)" fg:x="2876" fg:w="13"/><text x="44.3537%" y="190.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (9 samples, 0.14%)</title><rect x="44.1650%" y="196" width="0.1380%" height="15" fill="rgb(243,32,47)" fg:x="2880" fg:w="9"/><text x="44.4150%" y="206.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (9 samples, 0.14%)</title><rect x="44.1650%" y="212" width="0.1380%" height="15" fill="rgb(247,202,23)" fg:x="2880" fg:w="9"/><text x="44.4150%" y="222.50"></text></g><g><title>forward (torch/nn/modules/linear.py:117) (9 samples, 0.14%)</title><rect x="44.1650%" y="228" width="0.1380%" height="15" fill="rgb(219,102,11)" fg:x="2880" fg:w="9"/><text x="44.4150%" y="238.50"></text></g><g><title>step (ensembling/models.py:229) (2,816 samples, 43.18%)</title><rect x="1.1655%" y="132" width="43.1836%" height="15" fill="rgb(243,110,44)" fg:x="76" fg:w="2816"/><text x="1.4155%" y="142.50">step (ensembling/models.py:229)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1553) (2,813 samples, 43.14%)</title><rect x="1.2115%" y="148" width="43.1376%" height="15" fill="rgb(222,74,54)" fg:x="79" fg:w="2813"/><text x="1.4615%" y="158.50">_wrapped_call_impl (torch/nn/modules/module.py:1553)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1562) (2,811 samples, 43.11%)</title><rect x="1.2421%" y="164" width="43.1069%" height="15" fill="rgb(216,99,12)" fg:x="81" fg:w="2811"/><text x="1.4921%" y="174.50">_call_impl (torch/nn/modules/module.py:1562)</text></g><g><title>step (ensembling/models.py:241) (609 samples, 9.34%)</title><rect x="44.3490%" y="132" width="9.3391%" height="15" fill="rgb(226,22,26)" fg:x="2892" fg:w="609"/><text x="44.5990%" y="142.50">step (ensembl..</text></g><g><title>_signature_from_callable (inspect.py:2461) (10 samples, 0.15%)</title><rect x="53.7188%" y="196" width="0.1534%" height="15" fill="rgb(217,163,10)" fg:x="3503" fg:w="10"/><text x="53.9688%" y="206.50"></text></g><g><title>__call__ (transformers/generation/logits_process.py:89) (14 samples, 0.21%)</title><rect x="53.7034%" y="148" width="0.2147%" height="15" fill="rgb(213,25,53)" fg:x="3502" fg:w="14"/><text x="53.9534%" y="158.50"></text></g><g><title>signature (inspect.py:3263) (13 samples, 0.20%)</title><rect x="53.7188%" y="164" width="0.1994%" height="15" fill="rgb(252,105,26)" fg:x="3503" fg:w="13"/><text x="53.9688%" y="174.50"></text></g><g><title>from_callable (inspect.py:3011) (13 samples, 0.20%)</title><rect x="53.7188%" y="180" width="0.1994%" height="15" fill="rgb(220,39,43)" fg:x="3503" fg:w="13"/><text x="53.9688%" y="190.50"></text></g><g><title>step (ensembling/models.py:246) (16 samples, 0.25%)</title><rect x="53.6881%" y="132" width="0.2454%" height="15" fill="rgb(229,68,48)" fg:x="3501" fg:w="16"/><text x="53.9381%" y="142.50"></text></g><g><title>step (ensembling/models.py:247) (28 samples, 0.43%)</title><rect x="53.9334%" y="132" width="0.4294%" height="15" fill="rgb(252,8,32)" fg:x="3517" fg:w="28"/><text x="54.1834%" y="142.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:216) (3,496 samples, 53.61%)</title><rect x="0.9048%" y="116" width="53.6114%" height="15" fill="rgb(223,20,43)" fg:x="59" fg:w="3496"/><text x="1.1548%" y="126.50">ensemble_beam_search (ensembling/ensemble.py:216)</text></g><g><title>step (ensembling/models.py:248) (10 samples, 0.15%)</title><rect x="54.3628%" y="132" width="0.1534%" height="15" fill="rgb(229,81,49)" fg:x="3545" fg:w="10"/><text x="54.6128%" y="142.50"></text></g><g><title>log_softmax (torch/nn/functional.py:1977) (10 samples, 0.15%)</title><rect x="54.3628%" y="148" width="0.1534%" height="15" fill="rgb(236,28,36)" fg:x="3545" fg:w="10"/><text x="54.6128%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:217) (10 samples, 0.15%)</title><rect x="54.5162%" y="116" width="0.1534%" height="15" fill="rgb(249,185,26)" fg:x="3555" fg:w="10"/><text x="54.7662%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:228) (9 samples, 0.14%)</title><rect x="54.7615%" y="116" width="0.1380%" height="15" fill="rgb(249,174,33)" fg:x="3571" fg:w="9"/><text x="55.0115%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:230) (38 samples, 0.58%)</title><rect x="54.8996%" y="116" width="0.5827%" height="15" fill="rgb(233,201,37)" fg:x="3580" fg:w="38"/><text x="55.1496%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:234) (17 samples, 0.26%)</title><rect x="55.4823%" y="116" width="0.2607%" height="15" fill="rgb(221,78,26)" fg:x="3618" fg:w="17"/><text x="55.7323%" y="126.50"></text></g><g><title>__init__ (ensembling/ensemble.py:46) (17 samples, 0.26%)</title><rect x="55.4823%" y="132" width="0.2607%" height="15" fill="rgb(250,127,30)" fg:x="3618" fg:w="17"/><text x="55.7323%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:46) (7 samples, 0.11%)</title><rect x="55.6356%" y="148" width="0.1073%" height="15" fill="rgb(230,49,44)" fg:x="3628" fg:w="7"/><text x="55.8856%" y="158.50"></text></g><g><title>id_to_token (ensembling/models.py:326) (27 samples, 0.41%)</title><rect x="55.8503%" y="148" width="0.4140%" height="15" fill="rgb(229,67,23)" fg:x="3642" fg:w="27"/><text x="56.1003%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:237) (44 samples, 0.67%)</title><rect x="55.7430%" y="116" width="0.6747%" height="15" fill="rgb(249,83,47)" fg:x="3635" fg:w="44"/><text x="55.9930%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:240) (40 samples, 0.61%)</title><rect x="55.8043%" y="132" width="0.6134%" height="15" fill="rgb(215,43,3)" fg:x="3639" fg:w="40"/><text x="56.0543%" y="142.50"></text></g><g><title>id_to_token (ensembling/models.py:327) (10 samples, 0.15%)</title><rect x="56.2644%" y="148" width="0.1534%" height="15" fill="rgb(238,154,13)" fg:x="3669" fg:w="10"/><text x="56.5144%" y="158.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:254) (166 samples, 2.55%)</title><rect x="56.4944%" y="116" width="2.5456%" height="15" fill="rgb(219,56,2)" fg:x="3684" fg:w="166"/><text x="56.7444%" y="126.50">en..</text></g><g><title>__lt__ (ensembling/ensemble.py:61) (65 samples, 1.00%)</title><rect x="58.0432%" y="132" width="0.9968%" height="15" fill="rgb(233,0,4)" fg:x="3785" fg:w="65"/><text x="58.2932%" y="142.50"></text></g><g><title>__len__ (torch/_tensor.py:1022) (13 samples, 0.20%)</title><rect x="59.6688%" y="148" width="0.1994%" height="15" fill="rgb(235,30,7)" fg:x="3891" fg:w="13"/><text x="59.9188%" y="158.50"></text></g><g><title>expand_frontier (ensembling/ensemble.py:86) (34 samples, 0.52%)</title><rect x="59.4541%" y="132" width="0.5214%" height="15" fill="rgb(250,79,13)" fg:x="3877" fg:w="34"/><text x="59.7041%" y="142.50"></text></g><g><title>__len__ (torch/_tensor.py:1031) (7 samples, 0.11%)</title><rect x="59.8681%" y="148" width="0.1073%" height="15" fill="rgb(211,146,34)" fg:x="3904" fg:w="7"/><text x="60.1181%" y="158.50"></text></g><g><title>expand_frontier (ensembling/ensemble.py:88) (95 samples, 1.46%)</title><rect x="59.9755%" y="132" width="1.4568%" height="15" fill="rgb(228,22,38)" fg:x="3911" fg:w="95"/><text x="60.2255%" y="142.50"></text></g><g><title>expand_frontier (ensembling/ensemble.py:89) (36 samples, 0.55%)</title><rect x="61.4323%" y="132" width="0.5521%" height="15" fill="rgb(235,168,5)" fg:x="4006" fg:w="36"/><text x="61.6823%" y="142.50"></text></g><g><title>id_to_token (ensembling/models.py:326) (255 samples, 3.91%)</title><rect x="62.6591%" y="148" width="3.9104%" height="15" fill="rgb(221,155,16)" fg:x="4086" fg:w="255"/><text x="62.9091%" y="158.50">id_t..</text></g><g><title>expand_frontier (ensembling/ensemble.py:90) (421 samples, 6.46%)</title><rect x="61.9844%" y="132" width="6.4561%" height="15" fill="rgb(215,215,53)" fg:x="4042" fg:w="421"/><text x="62.2344%" y="142.50">expand_f..</text></g><g><title>id_to_token (ensembling/models.py:327) (122 samples, 1.87%)</title><rect x="66.5695%" y="148" width="1.8709%" height="15" fill="rgb(223,4,10)" fg:x="4341" fg:w="122"/><text x="66.8195%" y="158.50">i..</text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:257) (1,185 samples, 18.17%)</title><rect x="59.0400%" y="116" width="18.1721%" height="15" fill="rgb(234,103,6)" fg:x="3850" fg:w="1185"/><text x="59.2900%" y="126.50">ensemble_beam_search (ensemb..</text></g><g><title>expand_frontier (ensembling/ensemble.py:98) (571 samples, 8.76%)</title><rect x="68.4558%" y="132" width="8.7563%" height="15" fill="rgb(227,97,0)" fg:x="4464" fg:w="571"/><text x="68.7058%" y="142.50">expand_front..</text></g><g><title>__init__ (ensembling/ensemble.py:46) (562 samples, 8.62%)</title><rect x="68.5938%" y="148" width="8.6183%" height="15" fill="rgb(234,150,53)" fg:x="4473" fg:w="562"/><text x="68.8438%" y="158.50">__init__ (en..</text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:46) (305 samples, 4.68%)</title><rect x="72.5349%" y="164" width="4.6772%" height="15" fill="rgb(228,201,54)" fg:x="4730" fg:w="305"/><text x="72.7849%" y="174.50">&lt;list..</text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:258) (22 samples, 0.34%)</title><rect x="77.2121%" y="116" width="0.3374%" height="15" fill="rgb(222,22,37)" fg:x="5035" fg:w="22"/><text x="77.4621%" y="126.50"></text></g><g><title>__str__ (ensembling/ensemble.py:54) (10 samples, 0.15%)</title><rect x="77.3961%" y="132" width="0.1534%" height="15" fill="rgb(237,53,32)" fg:x="5047" fg:w="10"/><text x="77.6461%" y="142.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:259) (10 samples, 0.15%)</title><rect x="77.5495%" y="116" width="0.1534%" height="15" fill="rgb(233,25,53)" fg:x="5057" fg:w="10"/><text x="77.7995%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:260) (190 samples, 2.91%)</title><rect x="77.7028%" y="116" width="2.9137%" height="15" fill="rgb(210,40,34)" fg:x="5067" fg:w="190"/><text x="77.9528%" y="126.50">en..</text></g><g><title>__lt__ (ensembling/ensemble.py:61) (79 samples, 1.21%)</title><rect x="79.4050%" y="132" width="1.2115%" height="15" fill="rgb(241,220,44)" fg:x="5178" fg:w="79"/><text x="79.6550%" y="142.50"></text></g><g><title>id_to_token (ensembling/models.py:326) (437 samples, 6.70%)</title><rect x="81.3526%" y="180" width="6.7014%" height="15" fill="rgb(235,28,35)" fg:x="5305" fg:w="437"/><text x="81.6026%" y="190.50">id_to_tok..</text></g><g><title>_decode (ensembling/models.py:349) (637 samples, 9.77%)</title><rect x="81.2912%" y="164" width="9.7684%" height="15" fill="rgb(210,56,17)" fg:x="5301" fg:w="637"/><text x="81.5412%" y="174.50">_decode (ensem..</text></g><g><title>id_to_token (ensembling/models.py:327) (196 samples, 3.01%)</title><rect x="88.0540%" y="180" width="3.0057%" height="15" fill="rgb(224,130,29)" fg:x="5742" fg:w="196"/><text x="88.3040%" y="190.50">id_..</text></g><g><title>_decode (ensembling/models.py:359) (7 samples, 0.11%)</title><rect x="91.1210%" y="164" width="0.1073%" height="15" fill="rgb(235,212,8)" fg:x="5942" fg:w="7"/><text x="91.3710%" y="174.50"></text></g><g><title>_decode (ensembling/models.py:369) (155 samples, 2.38%)</title><rect x="91.2743%" y="164" width="2.3769%" height="15" fill="rgb(223,33,50)" fg:x="5952" fg:w="155"/><text x="91.5243%" y="174.50">_d..</text></g><g><title>convert_tokens_to_string (ensembling/models.py:402) (146 samples, 2.24%)</title><rect x="91.4124%" y="180" width="2.2389%" height="15" fill="rgb(219,149,13)" fg:x="5961" fg:w="146"/><text x="91.6624%" y="190.50">c..</text></g><g><title>Decode (sentencepiece/__init__.py:803) (125 samples, 1.92%)</title><rect x="91.7344%" y="196" width="1.9169%" height="15" fill="rgb(250,156,29)" fg:x="5982" fg:w="125"/><text x="91.9844%" y="206.50">D..</text></g><g><title>_DecodePieces (sentencepiece/__init__.py:349) (123 samples, 1.89%)</title><rect x="91.7651%" y="212" width="1.8862%" height="15" fill="rgb(216,193,19)" fg:x="5984" fg:w="123"/><text x="92.0151%" y="222.50">_..</text></g><g><title>compatibility (ensembling/ensemble.py:109) (842 samples, 12.91%)</title><rect x="80.8005%" y="132" width="12.9121%" height="15" fill="rgb(216,135,14)" fg:x="5269" fg:w="842"/><text x="81.0505%" y="142.50">compatibility (ense..</text></g><g><title>extend_beam_string (ensembling/models.py:310) (828 samples, 12.70%)</title><rect x="81.0152%" y="148" width="12.6974%" height="15" fill="rgb(241,47,5)" fg:x="5283" fg:w="828"/><text x="81.2652%" y="158.50">extend_beam_string ..</text></g><g><title>compatibility (ensembling/ensemble.py:112) (8 samples, 0.12%)</title><rect x="93.7126%" y="132" width="0.1227%" height="15" fill="rgb(233,42,35)" fg:x="6111" fg:w="8"/><text x="93.9626%" y="142.50"></text></g><g><title>compatibility (ensembling/ensemble.py:114) (220 samples, 3.37%)</title><rect x="93.8353%" y="132" width="3.3737%" height="15" fill="rgb(231,13,6)" fg:x="6119" fg:w="220"/><text x="94.0853%" y="142.50">com..</text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:114) (215 samples, 3.30%)</title><rect x="93.9120%" y="148" width="3.2970%" height="15" fill="rgb(207,181,40)" fg:x="6124" fg:w="215"/><text x="94.1620%" y="158.50">&lt;li..</text></g><g><title>is_eos (ensembling/models.py:537) (206 samples, 3.16%)</title><rect x="94.0500%" y="164" width="3.1590%" height="15" fill="rgb(254,173,49)" fg:x="6133" fg:w="206"/><text x="94.3000%" y="174.50">is_..</text></g><g><title>compatibility (ensembling/ensemble.py:137) (13 samples, 0.20%)</title><rect x="97.5004%" y="132" width="0.1994%" height="15" fill="rgb(221,1,38)" fg:x="6358" fg:w="13"/><text x="97.7504%" y="142.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:262) (1,118 samples, 17.14%)</title><rect x="80.6165%" y="116" width="17.1446%" height="15" fill="rgb(206,124,46)" fg:x="5257" fg:w="1118"/><text x="80.8665%" y="126.50">ensemble_beam_search (ensem..</text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:275) (30 samples, 0.46%)</title><rect x="97.7764%" y="116" width="0.4601%" height="15" fill="rgb(249,21,11)" fg:x="6376" fg:w="30"/><text x="98.0264%" y="126.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:302) (8 samples, 0.12%)</title><rect x="98.2671%" y="116" width="0.1227%" height="15" fill="rgb(222,201,40)" fg:x="6408" fg:w="8"/><text x="98.5171%" y="126.50"></text></g><g><title>&lt;listcomp&gt; (ensembling/ensemble.py:302) (7 samples, 0.11%)</title><rect x="98.2825%" y="132" width="0.1073%" height="15" fill="rgb(235,61,29)" fg:x="6409" fg:w="7"/><text x="98.5325%" y="142.50"></text></g><g><title>update (ensembling/models.py:492) (10 samples, 0.15%)</title><rect x="98.3898%" y="132" width="0.1534%" height="15" fill="rgb(219,207,3)" fg:x="6416" fg:w="10"/><text x="98.6398%" y="142.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:310) (36 samples, 0.55%)</title><rect x="98.3898%" y="116" width="0.5521%" height="15" fill="rgb(222,56,46)" fg:x="6416" fg:w="36"/><text x="98.6398%" y="126.50"></text></g><g><title>update (ensembling/models.py:515) (20 samples, 0.31%)</title><rect x="98.6352%" y="132" width="0.3067%" height="15" fill="rgb(239,76,54)" fg:x="6432" fg:w="20"/><text x="98.8852%" y="142.50"></text></g><g><title>pad_sequence (torch/nn/utils/rnn.py:397) (9 samples, 0.14%)</title><rect x="98.8039%" y="148" width="0.1380%" height="15" fill="rgb(231,124,27)" fg:x="6443" fg:w="9"/><text x="99.0539%" y="158.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1363) (12 samples, 0.18%)</title><rect x="98.9572%" y="180" width="0.1840%" height="15" fill="rgb(249,195,6)" fg:x="6453" fg:w="12"/><text x="99.2072%" y="190.50"></text></g><g><title>all_special_tokens (transformers/tokenization_utils_base.py:1355) (12 samples, 0.18%)</title><rect x="98.9572%" y="196" width="0.1840%" height="15" fill="rgb(237,174,47)" fg:x="6453" fg:w="12"/><text x="99.2072%" y="206.50"></text></g><g><title>_decode (transformers/tokenization_utils.py:1072) (23 samples, 0.35%)</title><rect x="98.9419%" y="148" width="0.3527%" height="15" fill="rgb(206,201,31)" fg:x="6452" fg:w="23"/><text x="99.1919%" y="158.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils.py:1048) (23 samples, 0.35%)</title><rect x="98.9419%" y="164" width="0.3527%" height="15" fill="rgb(231,57,52)" fg:x="6452" fg:w="23"/><text x="99.1919%" y="174.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1364) (10 samples, 0.15%)</title><rect x="99.1412%" y="180" width="0.1534%" height="15" fill="rgb(248,177,22)" fg:x="6465" fg:w="10"/><text x="99.3912%" y="190.50"></text></g><g><title>convert_tokens_to_ids (transformers/tokenization_utils.py:718) (9 samples, 0.14%)</title><rect x="99.1566%" y="196" width="0.1380%" height="15" fill="rgb(215,211,37)" fg:x="6466" fg:w="9"/><text x="99.4066%" y="206.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1363) (10 samples, 0.15%)</title><rect x="99.4019%" y="164" width="0.1534%" height="15" fill="rgb(241,128,51)" fg:x="6482" fg:w="10"/><text x="99.6519%" y="174.50"></text></g><g><title>all_special_tokens (transformers/tokenization_utils_base.py:1355) (10 samples, 0.15%)</title><rect x="99.4019%" y="180" width="0.1534%" height="15" fill="rgb(227,165,31)" fg:x="6482" fg:w="10"/><text x="99.6519%" y="190.50"></text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:326) (48 samples, 0.74%)</title><rect x="98.9419%" y="116" width="0.7361%" height="15" fill="rgb(228,167,24)" fg:x="6452" fg:w="48"/><text x="99.1919%" y="126.50"></text></g><g><title>decode (transformers/tokenization_utils_base.py:4034) (48 samples, 0.74%)</title><rect x="98.9419%" y="132" width="0.7361%" height="15" fill="rgb(228,143,12)" fg:x="6452" fg:w="48"/><text x="99.1919%" y="142.50"></text></g><g><title>_decode (transformers/tokenization_utils.py:1083) (23 samples, 0.35%)</title><rect x="99.3253%" y="148" width="0.3527%" height="15" fill="rgb(249,149,8)" fg:x="6477" fg:w="23"/><text x="99.5753%" y="158.50"></text></g><g><title>all_special_ids (transformers/tokenization_utils_base.py:1364) (8 samples, 0.12%)</title><rect x="99.5553%" y="164" width="0.1227%" height="15" fill="rgb(243,35,44)" fg:x="6492" fg:w="8"/><text x="99.8053%" y="174.50"></text></g><g><title>convert_tokens_to_ids (transformers/tokenization_utils.py:718) (7 samples, 0.11%)</title><rect x="99.5706%" y="180" width="0.1073%" height="15" fill="rgb(246,89,9)" fg:x="6493" fg:w="7"/><text x="99.8206%" y="190.50"></text></g><g><title>_decode (transformers/tokenization_utils.py:1072) (9 samples, 0.14%)</title><rect x="99.7086%" y="148" width="0.1380%" height="15" fill="rgb(233,213,13)" fg:x="6502" fg:w="9"/><text x="99.9586%" y="158.50"></text></g><g><title>convert_ids_to_tokens (transformers/tokenization_utils.py:1048) (9 samples, 0.14%)</title><rect x="99.7086%" y="164" width="0.1380%" height="15" fill="rgb(233,141,41)" fg:x="6502" fg:w="9"/><text x="99.9586%" y="174.50"></text></g><g><title>all (6,521 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(239,167,4)" fg:x="0" fg:w="6521"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (ensembling/ensemble.py:435) (6,521 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(209,217,16)" fg:x="0" fg:w="6521"/><text x="0.2500%" y="78.50">&lt;module&gt; (ensembling/ensemble.py:435)</text></g><g><title>main (ensembling/ensemble.py:396) (6,521 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(219,88,35)" fg:x="0" fg:w="6521"/><text x="0.2500%" y="94.50">main (ensembling/ensemble.py:396)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:116) (6,521 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(220,193,23)" fg:x="0" fg:w="6521"/><text x="0.2500%" y="110.50">decorate_context (torch/utils/_contextlib.py:116)</text></g><g><title>ensemble_beam_search (ensembling/ensemble.py:333) (19 samples, 0.29%)</title><rect x="99.7086%" y="116" width="0.2914%" height="15" fill="rgb(230,90,52)" fg:x="6502" fg:w="19"/><text x="99.9586%" y="126.50"></text></g><g><title>decode (transformers/tokenization_utils_base.py:4034) (19 samples, 0.29%)</title><rect x="99.7086%" y="132" width="0.2914%" height="15" fill="rgb(252,106,19)" fg:x="6502" fg:w="19"/><text x="99.9586%" y="142.50"></text></g><g><title>_decode (transformers/tokenization_utils.py:1083) (8 samples, 0.12%)</title><rect x="99.8773%" y="148" width="0.1227%" height="15" fill="rgb(206,74,20)" fg:x="6513" fg:w="8"/><text x="100.1273%" y="158.50"></text></g></svg></svg>